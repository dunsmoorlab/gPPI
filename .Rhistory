ROI2 = amyg
rdat <- data.frame(
roi1=ROI1[group,'early_CSp_CSm'],
roi2=ROI2[group,'early_CSp_CSm'],
evidence=ev[group,'ev']
)
model.r <- 'evidence ~ a*roi1
roi2 ~ b*evidence + c*roi1
indirect := a*b
direct   := c
total    := c + (a*b)'
fit.r <- sem(model.r, data=rdat)
summary(fit.r)
med_fit <- lm(evidence ~ roi1,data=rdat)
out_fit <- lm(roi2 ~ evidence + roi1,data=rdat)
med.out <- mediate(med_fit, out_fit, treat = "roi1", mediator = "evidence", boot=TRUE, sims = 1000)
summary(med.out)
ev = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\signal_change\\mvpa_ev.csv')
require(ggplot2)
require(ggpubr)
ev = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\signal_change\\mvpa_ev.csv')
psc = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\signal_change\\beta_values.csv')
cmap = which(ev$Group == 'Control')
pmap = which(ev$Group == 'PTSD')
amyg = cbind(psc[which(psc$roi == 'amygdala_beta'),], ev)
hpc = cbind(psc[which(psc$roi == 'hippocampus_beta'),], ev)
mOFC = cbind(psc[which(psc$roi == 'mOFC_beta'),], ev)
vmPFC = cbind(psc[which(psc$roi == 'vmPFC_beta'),], ev)
dACC = cbind(psc[which(psc$roi == 'dACC_beta'),], ev)
rcorr <- function(roi){
cmap = which(ev$Group == 'Control')
pmap = which(ev$Group == 'PTSD')
#first one is ER
out <- data.frame(row.names = c('early_CSp_pe','early_CSm_pe','late_CSp_pe','late_CSm_pe','early_CSp_cope','early_CSm_cope','early_CSp_CSm','early_CSm_CSp','late_CSp_cope','late_CSm_cope','late_CSp_CSm','late_CSm_CSp'))
#middle one is IDK
#out <- data.frame(row.names = c('early_CSp_pe','early_CSm_pe','late_CSp_pe','late_CSm_pe','early_CSp_cope','early_CSp_CSm','late_CSp_cope','late_CSp_CSm','all_CSp_cope','all_CSp_CSm'))
#this one is day1
#out <- data.frame(row.names = c('junk1','junk2','junk3','jnk4','CSp_pe','CSm_pe','CSp_CSm','CSm_CSp'))
out['c_r'] <- NaN
out['c_p'] <- NaN
out['p_r'] <- NaN
out['p_p'] <- NaN
for(img in row.names(out)){
cr = cor.test(roi$ev[cmap], roi[img][cmap,])
out[img,'c_r'] <- cr$estimate[['cor']]
out[img,'c_p'] <- cr$p.value
pr = cor.test(roi$ev[pmap], roi[img][pmap,])
out[img,'p_r'] <- pr$estimate[['cor']]
out[img,'p_p'] <- pr$p.value
}
return(out)
}
vm <- rcorr(vmPFC)
m <- rcorr(mOFC)
a <- rcorr(amyg)
h <- rcorr(hpc)
d <- rcorr(dACC)
m
d
m
vm
a
h
mtumTEETtum
r_psc = read.csv('/Users/ach3377/Db_lpl/STUDY/FearCon/graphing/signal_change/beta_values.csv')
ev = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\signal_change\\mvpa_ev.csv')
scr = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\SCR\\c_e_rnw_scr.csv')
r_psc = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\FearCon\\graphing\\signal_change\\beta_values.csv')
r_psc = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\signal_change\\beta_values.csv')
cmap = which(ev$Group == 'Control')
pmap = which(ev$Group == 'PTSD')
require(ggplot2)
require(ppcor)
require(hmisc)
require(mediation)
require(lavaan)
cmap = which(ev$Group == 'Control')
pmap = which(ev$Group == 'PTSD')
amyg = cbind(r_psc[which(r_psc$roi == 'amygdala_beta'),],e_psc[which(e_psc$roi == 'amygdala_beta'),], ev)
hpc = cbind(r_psc[which(r_psc$roi == 'hippocampus_beta'),],e_psc[which(e_psc$roi == 'hippocampus_beta'),], ev)
mOFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta'),],e_psc[which(e_psc$roi == 'mOFC_beta'),], ev)
SvmPFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta'),]scr)
SvmPFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta'),scr)
###########################################
group=cmap
ROI = mOFC
data1 <- data.frame(
renewal=ROI[group,'early_CSp_CSm'],
extinction=ROI[group,'CSp_CSm'],
evidence=ROI[group,'ev']
)
pcor(data1)
pcres <- pcor.test(data1$extinction,data1$renewal,data1$evidence,method="pearson")
print(pcres)
model.context <- 'evidence ~ extinction
renewal ~ evidence + extinction'
model.dat = data1
context.fit <- sem(model.context, data=model.dat)
summary(context.fit)
model.context2 <- 'evidence ~ a*extinction
renewal ~ b*evidence + c*extinction
indirect := a*b
direct   := c
total    := c + (a*b)'
context.fit2 <- sem(model.context2, data=model.dat)
summary(context.fit2)
################################
med_fit <- lm(evidence ~ extinction,data=data1)
out_fit <- lm(renewal ~ evidence + extinction,data=data1)
med.out <- mediate(med_fit, out_fit, treat = "extinction", mediator = "evidence", boot=TRUE, sims = 1000)
summary(med.out)
plot(med.out)
####################################
group=pmap
ROI1 = mOFC
ROI2 = amyg
rdat <- data.frame(
roi1=ROI1[group,'early_CSp_CSm'],
roi2=ROI2[group,'early_CSp_CSm'],
evidence=ev[group,'ev']
)
model.r <- 'evidence ~ a*roi1
roi2 ~ b*evidence + c*roi1
indirect := a*b
direct   := c
total    := c + (a*b)'
fit.r <- sem(model.r, data=rdat)
summary(fit.r)
med_fit <- lm(evidence ~ roi1,data=rdat)
out_fit <- lm(roi2 ~ evidence + roi1,data=rdat)
med.out <- mediate(med_fit, out_fit, treat = "roi1", mediator = "evidence", boot=TRUE, sims = 10000)
summary(med.out)
plot(med.out)
###################################
group <- pmap
netdat <- data.frame(
vmPFC=mOFC[group,'early_CSp_CSm'],
amygdala=amyg[group,'early_CSp_CSm'],
hippocampus=hpc[group,'early_CSp_CSm']
)
pcor(netdat)
pcres <- pcor.test(data$extinction,data$renewal,data$evidence,method="pearson")
SvmPFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta'),scr])
scr
SvmPFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta'),scr$scr])
SvmPFC
ev = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\signal_change\\mvpa_ev.csv')
scr = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\SCR\\c_e_rnw_scr.csv')
r_psc = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\signal_change\\beta_values.csv')
cmap = which(ev$Group == 'Control')
pmap = which(ev$Group == 'PTSD')
SvmPFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta'),scr$scr])
SvmPFC
SvmPFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta')][cmap],scr$scr])
scr = rbind((scr,scr))
scr = rbind(scr,scr)
scr
ev = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\signal_change\\mvpa_ev.csv')
scr = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\SCR\\c_e_rnw_scr.csv')
scr = rbind(scr,scr)
r_psc = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\signal_change\\beta_values.csv')
SvmPFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta')],scr$scr])
SvmPFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta')],scr$scr)
SvmPFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta')],scr)
SvmPFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta'),],scr$scr)
SvmPFC
SvmPFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta'),],scr)
SvmPFC
group=cmap
ROI = mOFC
sdata <- data.frame(
renewal=ROI[group,'early_CSp_CSm'],
scr=ROI[group,'CSp_CSm'],
evidence=ROI[group,'ev']
)
sdata <- data.frame(
renewal=ROI[group,'early_CSp_CSm'],
scr=ROI[group,'CSp_CSm'],
evidence=ROI[group,'scr']
)
sdata <- data.frame(
renewal=ROI[group,'early_CSp_CSm'],
scr=ROI[group,'CSp_CSm'],
evidence=ROI[group,'scr']
)
SvmPFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta'),],scr,ev)
cmap = which(ev$Group == 'Control')
ev = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\signal_change\\mvpa_ev.csv')
scr = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\SCR\\c_e_rnw_scr.csv')
scr = rbind(scr,scr)
r_psc = read.csv('C:\\Users\\ACH\\Dropbox (LewPeaLab)\\STUDY\\FearCon\\graphing\\signal_change\\beta_values.csv')
cmap = which(ev$Group == 'Control')
pmap = which(ev$Group == 'PTSD')
amyg = cbind(r_psc[which(r_psc$roi == 'amygdala_beta'),],e_psc[which(e_psc$roi == 'amygdala_beta'),], ev)
hpc = cbind(r_psc[which(r_psc$roi == 'hippocampus_beta'),],e_psc[which(e_psc$roi == 'hippocampus_beta'),], ev)
mOFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta'),],e_psc[which(e_psc$roi == 'mOFC_beta'),], ev)
vmPFC = cbind(r_psc[which(r_psc$roi == 'vmPFC_beta'),],e_psc[which(e_psc$roi == 'vmPFC_beta'),], ev)
dACC = cbind(r_psc[which(r_psc$roi == 'dACC_beta'),],e_psc[which(e_psc$roi == 'dACC_beta'),], ev)
SvmPFC = cbind(r_psc[which(r_psc$roi == 'mOFC_beta'),],scr,ev)
SvmPFC
cmap
ROI
ROI[group,'ev']
ROI[group,'scr']
group=cmap
ROI = SvmPFC
sdata <- data.frame(
renewal=ROI[group,'early_CSp_CSm'],
scr=ROI[group,'scr'],
evidence=ROI[group,'ev']
)
sdata
med_fit <- lm(evidence ~ renewal,data=data1)
out_fit <- lm(scr ~ evidence + extinction,data=data1)
med.out <- mediate(med_fit, out_fit, treat = "extinction", mediator = "evidence", boot=TRUE, sims = 1000)
summary(med.out)
med_fit <- lm(evidence ~ renewal,data=sdata)
out_fit <- lm(scr ~ evidence + extinction,data=sdata)
med.out <- mediate(med_fit, out_fit, treat = "extinction", mediator = "evidence", boot=TRUE, sims = 1000)
med_fit <- lm(evidence ~ renewal,data=sdata)
out_fit <- lm(scr ~ evidence + extinction,data=sdata)
out_fit <- lm(scr ~ evidence + renewal,data=sdata)
med.out <- mediate(med_fit, out_fit, treat = "extinction", mediator = "evidence", boot=TRUE, sims = 1000)
med_fit <- lm(evidence ~ renewal,data=sdata)
out_fit <- lm(scr ~ evidence + renewal,data=sdata)
med.out <- mediate(med_fit, out_fit, treat = "extinction", mediator = "evidence", boot=TRUE, sims = 1000)
med.out <- mediate(med_fit, out_fit, treat = "renewal", mediator = "evidence", boot=TRUE, sims = 1000)
summary(med.out)
plot(med.out)
source('C:/Users/ACH/Dropbox (LewPeaLab)/STUDY/FearCon/CodeBase/pcorr.R', echo=TRUE)
plot(med.out)
summary(out_fit)
summary(med.out)
install.packages(c("magick", "rgl"))
lev = read.csv('../Desktop/level_df.csv')
lev.subject <- as.factor(lev$subject)
str(lev)
lev <- read.csv('../Desktop/level_df.csv')
lmod <- ezANOVA(lev,dv=.(rsa),wid=.(subject),within=.(encode_phase,level,roi),between=.(group))
c_lev <- subset(lev, group %in% 'control')
p_lev <- subset(lev, group %in% 'ptsd')
c_lev_mod <- ezANOVA(c_lev,dv=.(rsa),wid=.(subject),within=.(encode_phase,level,roi))
p_lev_mod <- ezANOVA(p_lev,dv=.(rsa),wid=.(subject),within=.(encode_phase,level,roi))
require(ez)
lev <- read.csv('../Desktop/level_df.csv')
lmod <- ezANOVA(lev,dv=.(rsa),wid=.(subject),within=.(encode_phase,level,roi),between=.(group))
c_lev <- subset(lev, group %in% 'control')
p_lev <- subset(lev, group %in% 'ptsd')
c_lev_mod <- ezANOVA(c_lev,dv=.(rsa),wid=.(subject),within=.(encode_phase,level,roi))
p_lev_mod <- ezANOVA(p_lev,dv=.(rsa),wid=.(subject),within=.(encode_phase,level,roi))
c_lev_mod$ANOVA
p_lev_mod$ANOVA
wmod <- ezANOVA(ws,dv=.(rsa),wid=.(subject),within=.(encode_phase,level,roi),between=.(group))
ws <- read.csv('../Desktop/memory_df.csv')
wmod <- ezANOVA(ws,dv=.(rsa),wid=.(subject),within=.(encode_phase,level,roi),between=.(group))
ws
wmod <- ezANOVA(ws,dv=.(rsa),wid=.(subject),within=.(encode_phase,memory_phase,roi),between=.(group))
wmod
wmod$ANOVA
lev <- read.csv('../Desktop/level_df.csv')
lmod <- ezANOVA(lev,dv=.(rsa),wid=.(subject),within=.(encode_phase,level,roi),between=.(group))
c_lev <- subset(lev, group %in% 'control')
p_lev <- subset(lev, group %in% 'ptsd')
c_lev_mod <- ezANOVA(c_lev,dv=.(rsa),wid=.(subject),within=.(encode_phase,level,roi))
p_lev_mod <- ezANOVA(p_lev,dv=.(rsa),wid=.(subject),within=.(encode_phase,level,roi))
ws <- read.csv('../Desktop/memory_df.csv')
wmod <- ezANOVA(ws,dv=.(rsa),wid=.(subject),within=.(encode_phase,memory_phase,roi),between=.(group))
c_ws <- subset(ws, group %in% 'control')
p_ws <- subset(ws, group %in% 'ptsd')
c_ws_mod <- ezANOVA(c_lev,dv=.(rsa),wid=.(subject),within=.(encode_phase,memory_phase,roi))
p_ws_mod <- ezANOVA(c_lev,dv=.(rsa),wid=.(subject),within=.(encode_phase,memory_phase,roi))
c_ws_mod <- ezANOVA(c_ws,dv=.(rsa),wid=.(subject),within=.(encode_phase,memory_phase,roi))
p_ws_mod <- ezANOVA(p_ws,dv=.(rsa),wid=.(subject),within=.(encode_phase,memory_phase,roi))
c_ws_mod$ANOVA
p.adjust(c_ws_mod$ANOVA$p,method='BH')
p_ws_mod$ANOVA
p.adjust(p_ws_mod$ANOVA$p,method='BH')
c_lev_mod$ANOVA
p.adjust(c_lev_mod$ANOVA$p,method='BH')
p_lev_mod$ANOVA
p.adjust(p_lev_mod$ANOVA$p,method='BH')
lmod$ANOVA
p.adjust(lmod$ANOVA$p,method='BH')
wmod$ANOVA
wmod$ANOVA
p.adjust(wmod$ANOVA$p,method='BH')
getcwd()
pwd
pwd()
test <- read.csv('')
test <- read.csv('/Gus/gPPI/test.csv')
pwd
getwd()
test <- read.csv('../Dropbox (LewPeaLab)/Gus/gPPI/test.csv')
require(ez)
a <- ezANOVA(test,dv=.(rsa),wid=.(subject),within=.(encode_phase,ROI))
a <- ezANOVA(test,dv=.(rsa),wid=.(subject),within=.(encode_phase,roi))
a$ANOVA
View(test)
test <- read.csv('../Dropbox (LewPeaLab)/Gus/gPPI/test.csv')
a <- ezANOVA(test,dv=.(rsa),wid=.(subject),within=.(encode_phase,roi))
a$ANOVA
test <- read.csv('../Dropbox (LewPeaLab)/Gus/gPPI/test.csv')
a <- ezANOVA(test,dv=.(rsa),wid=.(subject),within=.(encode_phase,roi),between=.(group))
test
test <- read.csv('../Dropbox (LewPeaLab)/Gus/gPPI/test.csv')
a <- ezANOVA(test,dv=.(rsa),wid=.(subject),within=.(encode_phase,roi),between=.(group))
a$ANOVA
test <- read.csv('../Dropbox (LewPeaLab)/Gus/gPPI/test.csv')
a <- ezANOVA(test,dv=.(rsa),wid=.(subject),within=.(encode_phase,roi))
a$ANOVA
test
test <- read.csv('../Dropbox (LewPeaLab)/Gus/gPPI/test.csv')
a <- ezANOVA(test,dv=.(rsa),wid=.(subject),within=.(encode_phase,roi))
test <- read.csv('../Dropbox (LewPeaLab)/Gus/gPPI/test.csv')
a <- ezANOVA(test,dv=.(rsa),wid=.(subject),within=.(encode_phase,roi))
a$ANOVA
rm(list = ls()
)
require(ez)
install.packages("sjstats")
require(sjstats)
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which("make")
install.packages("sjstats")
install.packages("sjstats",type="source")
library(devtools)
devtools::install_github("strengejacke/sjstats")
```
healthy: r = 0.46, p = 0.095
ptss:  r = 0.24, p = 0.35
```
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which("make")
require(permuco)
setwd("C:/Users/ACH/Documents/gPPI")
df <- read.csv('amyg_cem_conn.csv')
str(df)
tidy
for (col in list('cope','group','seed','target','subject')){df[col] <- as.factor(df[col])}
str(df)
df$cope <- as.factor(df$cope)
str(df)
df
for (col in list('cope','group','seed','target','subject')){df[col] <- as.factor(df$col)}
df <- read.csv('amyg_cem_conn.csv')
str(df)
for (col in list('cope','group','seed','target','subject')){df[col] <- as.factor(df$col)}
str(df)
df <- read.csv('amyg_cem_conn.csv')
str(df)
for (col in c('cope','group','seed','target','subject')){df[col] <- as.factor(df$col)}
str(df)
df['cope']
df <- read.csv('amyg_cem_conn.csv')
str(df)
for (col in c('cope','group','seed','target','subject')){df$col <- as.factor(df$col)}
str(df)
df <- read.csv('amyg_cem_conn.csv')
str(df)
for (col in c('cope','group','seed','target','subject')){df$col <- as.factor(df$col)}
str(df)
df$cope <- as.factor(df$cope)
df$group <- as.factor(df$group)
df$seed <- as.factor(df$seed)
df$target <- as.factor(df$target)
df$subject <- as.factor(df$subject)
str(df)
require(permuco)
form <- conn ~ group * seed * target * cope + Error(subject / (seed * target * cope))
amyg.aov <- aovperm(form,df,np=10000)
form <- conn ~ group  * target * cope + Error(subject / (target * cope))
amyg.aov <- aovperm(form,df,np=10000)
amyg.aov
df <- read.csv('amyg_cem_conn.csv')
str(df)
#df$cope <- as.factor(df$cope)
df$group <- as.factor(df$group)
#df$seed <- as.factor(df$seed)
df$target <- as.factor(df$target)
df$subject <- as.factor(df$subject)
form <- conn ~ group* target + Error(subject / (target))
amyg.aov <- aovperm(form,df,np=10000)
amyg.aov
#set up output structure
#rois <- list('A32sg','A32p','A24cd','A24rv','A14m','A11m','A13','A10m','A9m','A8m','A6m')
rois <- list('rACG','sgACC')
phases <- list('baseline','acquisition','early_extinction','extinction')
phases <- list('baseline','acquisition','extinction')
groups <- list('healthy','ptsd')
conditions <- list('CS+','CS-')
lmm_res <- expand.grid(roi=rois,phase=phases,group=groups,condition=conditions)
lmm_res$beta <- 0
lmm_res$chisq <- 0
lmm_res$pval <- 0
#load the full dataset
df <- read.csv('full_ers_split_ext.csv')
df$subject <- as.factor(df$subject)
df$high_confidence_accuracy <- as.factor(df$high_confidence_accuracy)
for (GROUP in groups){
for (PHASE in phases){
for (ROI in rois){
for (CON in conditions){
#dat <- df[with(df,subject %notin% c(18,20,120) & group == GROUP & roi == ROI & encode_phase == PHASE & trial_type == CON),]
dat <- df[with(df,group == GROUP & roi == ROI & encode_phase == PHASE & trial_type == CON),]
wo_mem <- lmer(rsa ~ (1|subject), REML = FALSE, data = dat)
w_mem <- lmer(rsa ~ (1|subject) + high_confidence_accuracy, REML = FALSE, data = dat)
lrt_res <- anova(wo_mem,w_mem)
lmm_summary <- summary(w_mem)
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),'beta'] <- lmm_summary$coefficients[2]
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),'chisq'] <- lrt_res$Chisq[2]
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),'pval'] <- lrt_res$`Pr(>Chisq)`[2]
}
}
}
}
require(lme4)
for (GROUP in groups){
for (PHASE in phases){
for (ROI in rois){
for (CON in conditions){
#dat <- df[with(df,subject %notin% c(18,20,120) & group == GROUP & roi == ROI & encode_phase == PHASE & trial_type == CON),]
dat <- df[with(df,group == GROUP & roi == ROI & encode_phase == PHASE & trial_type == CON),]
wo_mem <- lmer(rsa ~ (1|subject), REML = FALSE, data = dat)
w_mem <- lmer(rsa ~ (1|subject) + high_confidence_accuracy, REML = FALSE, data = dat)
lrt_res <- anova(wo_mem,w_mem)
lmm_summary <- summary(w_mem)
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),'beta'] <- lmm_summary$coefficients[2]
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),'chisq'] <- lrt_res$Chisq[2]
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),'pval'] <- lrt_res$`Pr(>Chisq)`[2]
}
}
}
}
lmm_res <- as.data.frame(lmm_res)
lmm_res <- apply(lmm_res,2,as.character)
lmm_res
lmm_res <- expand.grid(roi=rois,phase=phases,group=groups,condition=conditions)
lmm_res$beta <- 0
lmm_res$chisq <- 0
lmm_res$pval <- 0
#load the full dataset
df <- read.csv('full_ers_split_ext.csv')
df$subject <- as.factor(df$subject)
df$high_confidence_accuracy <- as.factor(df$high_confidence_accuracy)
for (GROUP in groups){
for (PHASE in phases){
for (ROI in rois){
for (CON in conditions){
#dat <- df[with(df,subject %notin% c(18,20,120) & group == GROUP & roi == ROI & encode_phase == PHASE & trial_type == CON),]
dat <- df[with(df,group == GROUP & roi == ROI & encode_phase == PHASE & trial_type == CON),]
wo_mem <- lmer(rsa ~ (1|subject), REML = FALSE, data = dat)
w_mem <- lmer(rsa ~ (1|subject) + high_confidence_accuracy, REML = FALSE, data = dat)
lrt_res <- anova(wo_mem,w_mem)
lmm_summary <- summary(w_mem)
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),'beta'] <- lmm_summary$coefficients[2]
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),'chisq'] <- lrt_res$Chisq[2]
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),'pval'] <- lrt_res$`Pr(>Chisq)`[2]
}
}
}
}
lmm_res
phases <- list('baseline','acquisition','early_extinction','extinction')
lmm_res <- expand.grid(roi=rois,phase=phases,group=groups,condition=conditions)
lmm_res <- expand.grid(roi=rois,phase=phases,group=groups,condition=conditions)
lmm_res$beta <- 0
lmm_res$chisq <- 0
lmm_res$pval <- 0
#load the full dataset
df <- read.csv('full_ers_split_ext.csv')
df$subject <- as.factor(df$subject)
df$high_confidence_accuracy <- as.factor(df$high_confidence_accuracy)
for (GROUP in groups){
for (PHASE in phases){
for (ROI in rois){
for (CON in conditions){
#dat <- df[with(df,subject %notin% c(18,20,120) & group == GROUP & roi == ROI & encode_phase == PHASE & trial_type == CON),]
dat <- df[with(df,group == GROUP & roi == ROI & encode_phase == PHASE & trial_type == CON),]
wo_mem <- lmer(rsa ~ (1|subject), REML = FALSE, data = dat)
w_mem <- lmer(rsa ~ (1|subject) + high_confidence_accuracy, REML = FALSE, data = dat)
lrt_res <- anova(wo_mem,w_mem)
lmm_summary <- summary(w_mem)
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),'beta'] <- lmm_summary$coefficients[2]
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),'chisq'] <- lrt_res$Chisq[2]
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),'pval'] <- lrt_res$`Pr(>Chisq)`[2]
}
}
}
}
lmm_res
df <- read.csv('split_out_conn.csv')
str(df)
require(ez)
sdf = df[with(df,seed == 'amyg_cem'),]
sres <- ezANOVA(sdf,dv=.(conn),wid=.(subject),within=.(condition,phase,target),between=.(group))
sres
sdf = df[with(df,seed == 'hc_head'),]
sres <- ezANOVA(sdf,dv=.(conn),wid=.(subject),within=.(condition,phase,target),between=.(group))
sres
df <- read.csv('amyg_cem_conn.csv')
str(df)
#df$cope <- as.factor(df$cope)
df$group <- as.factor(df$group)
#df$seed <- as.factor(df$seed)
df$target <- as.factor(df$target)
df$subject <- as.factor(df$subject)
form <- conn ~ group* target + Error(subject / (target))
amyg.aov <- aovperm(form,df,np=10000)
amyg.aov
exit
exit()
