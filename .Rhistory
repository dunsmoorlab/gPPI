no_mem_ag['group'] <- ifelse(no_mem_ag$subject < 100,1,2)#recreate the group column
for (q in c('subject','group')){no_mem_ag[[q]] <- as.factor(no_mem_ag[[q]])}  #factorize things that need it
#run the ANOVA
no_mem_res <- ezANOVA(data=no_mem_ag,dv=.(rsa),wid=.(subject),within=.(encode,trial_type),between=.(group),type=3)
rowi <- i+1 #correct for pythonic indexing
no_mem_mat[rowi,] <- no_mem_res$ANOVA$p #save the results
#Include memory - we have to exclude some subs
if (i%%250 == 0){print(i)}#give us some readout of progress
}
no_mem_df = data.frame(no_mem_mat)
colnames(no_mem_df) <- no_mem_effects
write.csv(no_mem_df,paste0(output_dir,'/no_mem_ANOVA.csv'))
require(ggpubr)
rm(list=ls())
require(ggplot2)
require(ggpubr)
require(ez)
#####################################
group_mem <- read.csv('/Users/ach3377/Db_lpl/STUDY/FearCon/graphing/memory/group_memory.csv')
group_mem[,'X'] <- list(NULL)
group_mem
group_mem$phase <- factor(group_mem$phase, levels=c('baseline','fear_conditioning','extinction','false_alarm'))
group_mem$condition <- factor(group_mem$condition, levels=c('CS+','CS-'))
group_mem$group <- factor(group_mem$group, levels=c('control','ptsd'))
group_mem$subject <- factor(group_mem$subject)
str(group_mem)
#####################################
#cr_dat <- group_mem
cr_dat <- subset(group_mem, phase %in% c('baseline','fear_conditioning','extinction'))
ezfull <- ezANOVA(data=cr_dat,dv=.(cr),wid=.(subject),within=.(phase,condition),between=.(group),type=3)
ezfull
ezfull <- ezANOVA(data=cr_dat,dv=.(cr),wid=.(subject),within=.(phase,condition),between=.(group),type=2)
ezfull
ezfull <- ezANOVA(data=cr_dat,dv=.(cr),wid=.(subject),within=.(phase,condition),between=.(group),type=1)
ezfull
ezfull <- ezANOVA(data=cr_dat,dv=.(cr),wid=.(subject),within=.(phase,condition),between=.(group),type=3)
ezfull
require(ez)
TR <- read.csv('/Users/ach3377/Db_lpl/STUDY/FearCon/graphing/signal_change/group_tr_df.csv')
TR$subject <- factor(TR$subject)
TR$trial <- factor(TR$trial)
TR$tr <- factor(TR$tr)
str(TR)
col
TR <- read.csv('/Users/ach3377/Db_lpl/STUDY/FearCon/graphing/signal_change/group_tr_df.csv')
for (q in c('subject','trial','tr')){TR[[q]] <- as.factor(TR[[q]])}
str(TR)
tr_res <- ezANOVA(data=TR,dv=.(evidence),wid=.(subject),within=.(tr),between=.(response,group),type=2)
tr_res
tr_res$ANOVA
rm(list=ls())
TR <- read.csv('/Users/ach3377/Db_lpl/STUDY/FearCon/graphing/signal_change/group_tr_df.csv')
for (q in c('subject','trial','tr')){TR[[q]] <- as.factor(TR[[q]])}
tr_res <- ezANOVA(data=TR,dv=.(evidence),wid=.(subject),within=.(tr),between=.(response,group),type=2)
tr_res$ANOVA
?subset
#str(TR)
TR <- subset(TR, tr %in% c(-2,-1,0))
tr_res <- ezANOVA(data=TR,dv=.(evidence),wid=.(subject),within=.(tr),between=.(response,group),type=2)
tr_res$ANOVA
cTR <- subset(TR, group %in% 'control')
c_res <- ezANOVA(data=cTR,dv=.(evidence),wid=.(subject),within=.(tr),between=.(response),type=2)
c_res$ANOVA
pTR <- subset(TR, group %in% 'ptsd')
p_res <- ezANOVA(data=pTR,dv=.(evidence),wid=.(subject),within=.(tr),between=.(response),type=2)
p_res$ANOVA
TR <- read.csv('/Users/ach3377/Db_lpl/STUDY/FearCon/graphing/signal_change/group_tr_df.csv')
for (q in c('subject','trial','tr')){TR[[q]] <- as.factor(TR[[q]])}
#str(TR)
#TR <- subset(TR, tr %in% c(-2,-1,0))
tr_res <- ezANOVA(data=TR,dv=.(evidence),wid=.(subject),within=.(tr),between=.(response,group),type=2)
tr_res$ANOVA
cTR <- subset(TR, group %in% 'control')
c_res <- ezANOVA(data=cTR,dv=.(evidence),wid=.(subject),within=.(tr),between=.(response),type=2)
c_res$ANOVA
c_res <- ezANOVA(data=cTR,dv=.(evidence),wid=.(subject),within=.(tr),between=.(response),type=3)
c_res$ANOVA
c_res <- ezANOVA(data=cTR,dv=.(evidence),wid=.(subject),within=.(tr),between=.(response),type=2)
c_res$ANOVA
pTR <- subset(TR, group %in% 'ptsd')
p_res <- ezANOVA(data=pTR,dv=.(evidence),wid=.(subject),within=.(tr),between=.(response),type=2)
p_res$ANOVA
TR <- read.csv('/Users/ach3377/Db_lpl/STUDY/FearCon/graphing/signal_change/group_tr_df.csv')
for (q in c('subject','trial','tr')){TR[[q]] <- as.factor(TR[[q]])}
#str(TR)
#TR <- subset(TR, tr %in% c(-2,-1,0))
#Between groups
tr_res <- ezANOVA(data=TR,dv=.(evidence),wid=.(subject),within=.(tr),between=.(response,group),type=2)
tr_res$ANOVA
#Control only
cTR <- subset(TR, group %in% 'control')
c_res <- ezANOVA(data=cTR,dv=.(evidence),wid=.(subject),within=.(tr),between=.(response),type=2)
c_res$ANOVA
#Control only
cTR <- subset(TR, group %in% 'control')
c_res <- ezANOVA(data=cTR,dv=.(evidence),wid=.(subject),within=.(tr),between=.(response),type=1)
c_res$ANOVA
#Control only
cTR <- subset(TR, group %in% 'control')
c_res <- ezANOVA(data=cTR,dv=.(evidence),wid=.(subject),within=.(tr),between=.(response),type=3)
c_res$ANOVA
#Control only
cTR <- subset(TR, group %in% 'control')
c_res <- ezANOVA(data=cTR,dv=.(evidence),wid=.(subject),within=.(tr),between=.(response),type=2)
c_res$ANOVA
cTR_ag <- aggregate(cTR$evidence,by=cTR$subject,mean)
cTR_ag <- aggregate(cTR$evidence,by=c(cTR$subject),mean)
cTR_ag <- aggregate(cTR$evidence,by=list(cTR$subject),mean)
View(cTR_ag)
boxplot(cTR_ag$x)
#PTSD only
pTR <- subset(TR, group %in% 'ptsd')
p_res <- ezANOVA(data=pTR,dv=.(evidence),wid=.(subject),within=.(tr),between=.(response),type=2)
p_res$ANOVA
require(ez)
logistics
ezAnova
ezANOVA
ezLogistic
ezLogisticx
ezLogistics
X = c(1,1,1,1,1,1,0,1,0,1,1,0,0,1,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0)
y = range(30)
y = range(1:30)
y
y = list(range(1:30))
y
1:5
y = 0:30
y
y = 0:29
data <- df(X,y)
data <- data.frame(X,y)
data
glm.fit <- glm(y ~ X,data=data, family=binomial)
data$y
data$X
y = c(1,1,1,1,1,1,0,1,0,1,1,0,0,1,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0)
X = 0:29
data <- data.frame(X,y)
data
glm.fit <- glm(y ~ X,data=data, family=binomial)
glm.fit
summary(glm.fit)
TR <- read.csv('/Users/ach3377/Db_lpl/STUDY/FearCon/graphing/signal_change/group_tr_df.csv')
for (q in c('subject','trial','tr')){TR[[q]] <- as.factor(TR[[q]])}
#str(TR)
#TR <- subset(TR, tr %in% c(-2,-1,0))
#Between groups
tr_res <- ezANOVA(data=TR,dv=.(evidence),wid=.(subject),within=.(tr),between=.(response,group),type=2)
tr_res$ANOVA
#Control only
cTR <- subset(TR, group %in% 'control')
c_res <- ezANOVA(data=cTR,dv=.(evidence),wid=.(subject),within=.(tr),between=.(response),type=2)
c_res$ANOVA
require(ez)
TR <- read.csv('/Users/ach3377/Db_lpl/STUDY/FearCon/graphing/signal_change/group_tr_df.csv')
for (q in c('subject','trial','tr')){TR[[q]] <- as.factor(TR[[q]])}
#str(TR)
#TR <- subset(TR, tr %in% c(-2,-1,0))
#Between groups
tr_res <- ezANOVA(data=TR,dv=.(evidence),wid=.(subject),within=.(tr),between=.(response,group),type=2)
tr_res$ANOVA
#Control only
cTR <- subset(TR, group %in% 'control')
c_res <- ezANOVA(data=cTR,dv=.(evidence),wid=.(subject),within=.(tr),between=.(response),type=2)
c_res$ANOVA
cTR_ag <- aggregate(cTR$evidence,by=list(cTR$subject),mean)
cTR_ag
c_res$ANOVA
#PTSD only
pTR <- subset(TR, group %in% 'ptsd')
p_res <- ezANOVA(data=pTR,dv=.(evidence),wid=.(subject),within=.(tr),between=.(response),type=2)
p_res$ANOVA
###############################
hits <- read.csv('/Users/ach3377/Db_lpl/STUDY/FearCon/graphing/memory/all_hit_rate.csv')
str(hits)
hits$subject <- factor(hits$subject)
str(hits)
ezhit <- ezANOVA(data=hits,dv=.(hc_acc),wid=.(subject),within=.(phase,condition),between=.(group),type=2)
require(ez)
ezhit <- ezANOVA(data=hits,dv=.(hc_acc),wid=.(subject),within=.(phase,condition),between=.(group),type=2)
ezhit <- ezANOVA(data=hits,dv=.(hc_acc),wid=.(subject),within=.(encode,condition),between=.(group),type=2)
ezhit <- ezANOVA(data=hits,dv=.(hc_acc),wid=.(subject),within=.(encode,trial_type),between=.(group),type=2)
summary(ezhit)
summary(ezhit$ANOVA)
ezhit$ANOVA
ezhit$ANOVA
ezhit <- ezANOVA(data=hits,dv=.(acc),wid=.(subject),within=.(encode,trial_type),between=.(group),type=2)
ezhit$ANOVA
hc_hr <- read.csv('~/Desktop/hc_hr.csv')
list(hc_hr)
hc_hr
hc_hr$group
hc_hr$subject
str(hc_hr)
hc_hr$subject <- factor(hc_hr$subject)
str(hc_hr)
require(ez)
ha <- ezANOVA(data=hc_hr,dv=.(hc_acc),wid=.(subject),within=.(encode,trial_type),between=.(group))
summary(ha)
summary(ha$ANOVA)
ha$ANOVA
updateR()
install.packages("installr")
require(ez)
ez
library(lmtest)
require('lme4')
require(lmetest)
install.packages(lmetest)
install.packages("lmetest")
library(lmtest)
install.packages("lmetest")
library(lmertest)
library(lmetest)
lemr
require(lme4)
lemr
lmer
require(emmeans)
install.packages("emmeans")
install.packages("rstan")
install.packages("withr")
rm(list=ls())
library(package)
.libPaths(())
.libPaths()
tulip <- c(81, 50, 27)
res <- chisq.test(tulip, p = c(1/2, 1/3, 1/6))
res
res <- chisq.test(tulip, p = c(1/3, 1/3, 1/3))
res
tulip <- c(14, 5, 5)
res <- chisq.test(tulip, p = c(1/3, 1/3, 1/3))
res
corr
corr.test
cor.test
cor.test?
?cor.test
require(pbcor)
install.packages("pbcor")
install.packages("pbcor")
install.packages("WRS2")
scor
scor
scor <-
function(x,y=NULL,corfun=pcor,gval=NA,plotit=FALSE,op=TRUE,cop=3,xlab="VAR 1",
ylab="VAR 2",STAND=TRUE,pr=TRUE,SEED=TRUE,MC=FALSE){
#
# Compute a skipped correlation coefficient.
#
# Eliminate outliers using a projection method
# That is, compute Donoho-Gasko median, for each point
# consider the line between it and the median,
# project all points onto this line, and
# check for outliers using a boxplot rule.
# Repeat this for all points. A point is declared
# an outlier if for any projection it is an outlier
# using a modification of the usual boxplot rule.
#
# For information about the argument cop, see the function
# outpro.
#
# Eliminate any outliers and compute correlation using
# remaining data.
#
#  MC=TRUE, the multicore version of outpro is used
#
# corfun=pcor means Pearson's correlation is used.
# corfun=spear means Spearman's correlation is used.
if(SEED){
oldSeed <- .Random.seed
set.seed(12) # So when using MVE or MCD, get consistent results
}
if(is.null(y[1]))m<-x
if(!is.null(y[1]))m<-cbind(x,y)
m<-elimna(m)
if(!MC)temp<-outpro(m,gval=gval,plotit=plotit,op=op,cop=cop,
xlab=xlab,ylab=ylab,STAND=STAND,pr=pr)$keep
if(MC)temp<-outproMC(m,gval=gval,plotit=plotit,op=op,cop=cop,
xlab=xlab,ylab=ylab,STAND=STAND,pr=pr)$keep
tcor<-corfun(m[temp,])$cor
if(!is.null(dim((m))))tcor<-tcor[1,2]
test<-abs(tcor*sqrt((nrow(m)-2)/(1-tcor**2)))
if(ncol(m)!=2)diag(test)<-NA
crit<-6.947/nrow(m)+2.3197
if(SEED) {
assign(x=".Random.seed", value=oldSeed, envir=.GlobalEnv)
}
list(cor.value=tcor,test.stat=test,crit.05=crit)
}
scor
install.packages("wilcox_R")
install.packages("WilcoxCV")
scor
require(WilcoxCV)
wcor
require(rrcov)
install.packages("rrcov")
require(rrcov)
wcor
scor
require(WRS2)
scor
wcor
install.packages("WRS")
install.packages("WRS",repos="http://R-Forge.R-project.org")
require(WRS)
install.packages("akima",repos="http://R-Forge.R-project.org")
install.packages("akima")
install.packages("akima",repos="http://R-Forge.R-project.org")
install.packages("WRS",repos="http://R-Forge.R-project.org")
require(WRS)
rm(list=ls())
require(WRS)
scor
x1 <- c(0.375, -0.125, -0.08333333,  0.41666667,  0.54166667, 0.25      ,  0.16666667,  0.04166667,  0.45833333, -0.20833333, -0.04166667,  0.04166667,  0.25      ,  0.29166667,  0.45833333,0.        ,  0.25      ,  0.08333333,  0.        ,  0.        ,-0.25      ,  0.        ,  0.25      ,  0.20833333,  0.        ,-0.29166667,  0.125     ,  0.75      ,  0.16666667,  0.        ,0.5       ,  0.41666667,  0.04166667,  0.08333333)
c(0.375     , -0.125     , -0.08333333,  0.41666667,  0.54166667,
0.25      ,  0.16666667,  0.04166667,  0.45833333, -0.20833333,
-0.04166667,  0.04166667,  0.25      ,  0.29166667,  0.45833333,
0.        ,  0.25      ,  0.08333333,  0.        ,  0.        ,
-0.25      ,  0.        ,  0.25      ,  0.20833333,  0.        ,
-0.29166667,  0.125     ,  0.75      ,  0.16666667,  0.        ,
0.5       ,  0.41666667,  0.04166667,  0.08333333)
x1 <- 0.375     , -0.125     , -0.08333333,  0.41666667,  0.54166667,
0.25      ,  0.16666667,  0.04166667,  0.45833333, -0.20833333,
-0.04166667,  0.04166667,  0.25      ,  0.29166667,  0.45833333,
0.        ,  0.25      ,  0.08333333,  0.        ,  0.        ,
-0.25      ,  0.        ,  0.25      ,  0.20833333,  0.        ,
-0.29166667,  0.125     ,  0.75      ,  0.16666667,  0.        ,
0.5       ,  0.41666667,  0.04166667,  0.08333333
x1 <- c(0.375     , -0.125     , -0.08333333,  0.41666667,  0.54166667,
0.25      ,  0.16666667,  0.04166667,  0.45833333, -0.20833333,
-0.04166667,  0.04166667,  0.25      ,  0.29166667,  0.45833333,
0.        ,  0.25      ,  0.08333333,  0.        ,  0.        ,
-0.25      ,  0.        ,  0.25      ,  0.20833333,  0.        ,
-0.29166667,  0.125     ,  0.75      ,  0.16666667,  0.        ,
0.5       ,  0.41666667,  0.04166667,  0.08333333)
y1 <- c(0.29166667,  0.1875    ,  0.33333333, -0.1875    ,  0.45833333,
0.16666667,  0.27083333, -0.29166667,  0.33333333, -0.02083333,
-0.16666667, -0.02083333,  0.        ,  0.16666667,  0.5       ,
0.04166667,  0.125     ,  0.20833333, -0.08333333, -0.08333333,
-0.02083333, -0.08333333,  0.04166667, -0.08333333, -0.16666667,
0.16666667,  0.125     ,  0.0625    ,  0.0625    ,  0.10416667,
0.35416667, -0.02083333, -0.02083333,  0.16666667)
scor(x1,y1)
pcor
pcor(x1,y1)
?pcor
??pcor
df <- data.frame(x1,y1)
df
pcor(df)
pcor(df)
as.matrix(df)
pcor(df)
scor(df)
pwd()
cor.test
df <- read.csv('pfc_ers_cleaned.csv')
#behavior example
setwd('/Users/ach3377/Documents/gPPI')
df <- read.csv('pfc_ers_cleaned.csv')
rm(list = ls())
phases = c('baseline','acquisition','extinction')
cons = c('CS+','CS-')
groups = c('healthy','ptsd')
#behavior example
setwd('/Users/ach3377/Documents/gPPI')
df <- read.csv('pfc_ers_cleaned.csv')
#df$subject <- factor(df$subject)
ers <- lmer(rsa~encode_phase*condition*roi*group + (1|subject),data=df,REML=FALSE)
require(lme4)
#df$subject <- factor(df$subject)
ers <- lmer(rsa~encode_phase*condition*roi*group + (1|subject),data=df,REML=FALSE)
#df$subject <- factor(df$subject)
ers <- lmer(rsa~phase*condition*roi*group + (1|subject),data=df,REML=FALSE)
summary(ers)
summary(ers)
df$subject <- factor(df$subject)
ers <- lmer(rsa~phase*condition*roi*group + (1|subject),data=df,REML=FALSE)
summary(ers)
anova(ers)
beh.emm <- emmeans(beh,list(pairwise ~ encode_phase:condition:response_phase),adjust="None")
require(emmeans)
ers.emm <- emmeans(ers,list(pairwise ~ encode_phase:condition:response_phase),adjust="None")
ers.emm <- emmeans(ers,list(pairwise ~ phase:condition:roi:group),adjust="None")
summary(ers$AICtab)
summary(ers)
ers <- glmer(rsa~phase*condition*roi*group + (1|subject),data=df,REML=FALSE)
ers <- glmer(rsa~phase*condition*roi*group + (1|subject),data=df)#,REML=FALSE)
ers
summary(ers)
confint(ers)
w_group <- lmer(rsa~phase*condition*roi*group + (1|subject),data=df,REML=FALSE)
wo_group <- lmer(rsa~phase*condition*roi + (1|subject),data=df,REML=FALSE)
lrtest(wo_group,w_group)
require(lmerTest)
w_group <- lmer(rsa~phase*condition*roi*group + (1|subject),data=df,REML=FALSE)
wo_group <- lmer(rsa~phase*condition*roi + (1|subject),data=df,REML=FALSE)
anova(w_group)
wo_group <- lmer(rsa~phase*condition*roi + (1|subject),data=df,REML=FALSE)
lrtest(wo_group,w_group)
anova(wo_group)
summary(wo_group)
summary(w_group)
lrtest
require(lmerTest)
lrtest
lmerTest::lrtest
require(lmtest)
lrtest(wo_group,w_group)
betas <- read.csv('subcortical_betas.csv')
bmod <- lmer(beta~phase*condition*roi*group + (1|subject),data=df,REML=FALSE)
betas <- read.csv('subcortical_betas.csv')
bmod <- lmer(beta~phase*condition*roi*group + (1|subject),data=betas,REML=FALSE)
anova(bmod)
#uni to ers
df <- read.csv('ers_subcort_betas_full.csv')
View(df)
mod <- lmer(dACC_ers~hc_head*phase*condition*group + (1|subject))
mod <- lmer(dACC_ers~hc_head*phase*condition*group + (1|subject),data=df,REML=FALSE)
anova(mod)
anova(mod)
mod <- lmer(dACC_ers~amyg_cem*phase*condition*group + (1|subject),data=df,REML=FALSE)
anova(mod)
summary(mod)
summary(mod)
mod <- lmer(dACC_ers~hc_body*phase*condition*group + (1|subject),data=df,REML=FALSE)
anova(mod)
mod <- lmer(dACC_ers~hc_tail*phase*condition*group + (1|subject),data=df,REML=FALSE)
anova(mod)
mod <- lmer(dACC_ers~hc_body*phase*condition*group + (1|subject),data=df,REML=FALSE)
anova(mod)
mod <- lmer(vmPFC_ers~hc_tail*phase*condition*group + (1|subject),data=df,REML=FALSE)
anova(mod)
summary(mod)
mod <- lmer(vmPFC_ers~hc_body*phase*condition*group + (1|subject),data=df,REML=FALSE)
anova(mod)
mod <- lmer(vmPFC_ers~hc_head*phase*condition*group + (1|subject),data=df,REML=FALSE)
anova(mod)
mod <- lmer(vmPFC_ers~amyg_bla*phase*condition*group + (1|subject),data=df,REML=FALSE)
anova(mod)
cdf = df[which(df$group == 'healthy'),]
mod <- lmer(vmPFC_ers~amyg_bla*phase*condition + (1|subject),data=cdf,REML=FALSE)
anova(cdf)
anova(mod)
cdf = df[which(df$group == 'healthy'),]
cdf = df[which(df$group == 'healthy'),]
cdf = df[which(df$group == 'healthy'),]
cdf = df[which(df$group == 'healthy'),]
cdf = df[which(df$group == 'healthy'),]
cdf = df[which(df$group == 'healthy'),]
mod <- lmer(vmPFC_ers~amyg_bla*phase*condition + (1|subject),data=cdf,REML=FALSE)
anova(mod)
cdf = df[which(df$group == 'ptsd'),]
mod <- lmer(vmPFC_ers~amyg_bla*phase*condition + (1|subject),data=cdf,REML=FALSE)
anova(mod)
#uni to ers
df <- read.csv('ers_subcort_betas_full.csv')
mod <- lmer(vmPFC_ers~amyg_cem*phase*condition*group + (1|subject),data=df,REML=FALSE)
anova(mod)
anova(mod)
mod <- lmer(vmPFC_ers~hc_head*phase*condition*group + (1|subject),data=df,REML=FALSE)
anova(mod)
mod <- lmer(vmPFC_ers~ 1+hc_head*phase*condition*group + (1|subject),data=df,REML=FALSE)
anova(mod)
summary(mod)
cdf = df[which(df$group == 'healthy' & df$phase!='baseline'),]
#more specific models
cdf = df[which(df$group == 'healthy' & df$phase != 'baseline'),]
pdf = df[which(df$group == 'ptsd' & df$phase != 'baseline'),]
roi <- hc_tail
#more specific models
cdf = df[which(df$group == 'healthy' & df$phase != 'baseline'),]
pdf = df[which(df$group == 'ptsd' & df$phase != 'baseline'),]
cmod <- lmer(dACC_ers~hc_tail*phase*condition + (1|subject),data=cdf,REML=FALSE)
anova(cmod)
pmod <- lmer(dACC_ers~hc_tail*phase*condition + (1|subject),data=pdf,REML=FALSE)
anova(pmod)
mod <- lmer(dACC_ers~hc_tail*phase*condition*group + (1|subject),data=df,REML=FALSE)
anova(mod)
mod <- lmer(dACC_ers~hc_tail*phase*condition + (1|subject),data=df,REML=FALSE)
anova(mod)
cmod <- lmer(dACC_ers~hc_body*phase*condition + (1|subject),data=cdf,REML=FALSE)
anova(cmod)
pmod <- lmer(dACC_ers~hc_body*phase*condition + (1|subject),data=pdf,REML=FALSE)
anova(pmod)
cmod <- lmer(dACC_ers~hc_head*phase*condition + (1|subject),data=cdf,REML=FALSE)
anova(cmod)
summary(cmod)
pmod <- lmer(dACC_ers~hc_head*phase*condition + (1|subject),data=pdf,REML=FALSE)
anova(pmod)
cmod <- lmer(dACC_ers~amyg_bla*phase*condition + (1|subject),data=cdf,REML=FALSE)
anova(cmod)
pmod <- lmer(dACC_ers~amyg_bla*phase*condition + (1|subject),data=pdf,REML=FALSE)
anova(pmod)
cmod <- lmer(dACC_ers~amyg_cem*phase*condition + (1|subject),data=cdf,REML=FALSE)
anova(cmod)
pmod <- lmer(dACC_ers~amyg_cem*phase*condition + (1|subject),data=pdf,REML=FALSE)
anova(pmod)
df2 <- df[which(df$phase != 'baseline'),]
#behavior example
setwd('/Users/ach3377/Documents/gPPI')
df <- read.csv('pfc_ers_cleaned.csv')
df2 <- df[which(df$phase != 'baseline'),]
ers <- lmer(rsa~phase*condition*roi*group + (1|subject),data=df2,REML=FALSE)
anova(ers)
ers <- lmer(rsa~phase*condition*roi*group + (1|subject),data=df,REML=FALSE)
anova(ers)
