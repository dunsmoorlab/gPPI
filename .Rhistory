#here down is actually correct
LRT <- mixed(rsa ~ (1|subject)  +  high_confidence_accuracy, data = c, REML = FALSE, method = 'LRT')
test
LRT
test = lmer(rsa ~ (1|subject) + high_confidence_accuracy, REML = FALSE, data = c) #Fitting a model using REML
test
anova(test)
##################
#here down is actually correct
LRT <- mixed(rsa ~ (1|subject)  +  high_confidence_accuracy, data = c, REML = FALSE, method = 'LRT')
LRT
LRT$full_model
anova(test,ddf='Kenward-Roger')
model <- ezMixed(c,dv=.(rsa),fixed=.(high_confidence_accuracy),random=.(subject),return_models = TRUE)
model$models
setwd("C:/Users/ACH/Documents/gPPI")
df <- read.csv('full_ers.csv')
df$subject <- as.factor(df$subject)
df$high_confidence_accuracy <- as.factor(df$high_confidence_accuracy)
ROI <- 'A14m'
GROUP <- 'ptsd'
PHASE <- 'extinction'
c <- df[with(df,group==GROUP & roi == ROI & encode_phase == PHASE & trial_type == 'CS+'),]
rm(list=ls())
df <- read.csv('full_ers.csv')
df$subject <- as.factor(df$subject)
df$high_confidence_accuracy <- as.factor(df$high_confidence_accuracy)
ROI <- 'A14m'
GROUP <- 'ptsd'
PHASE <- 'extinction'
c <- df[with(df,group==GROUP & roi == ROI & encode_phase == PHASE & trial_type == 'CS+'),]
##################
#here down is actually correct
LRT <- mixed(rsa ~ (1|subject)  +  high_confidence_accuracy, data = c, REML = FALSE, method = 'LRT')
std <- lmer(rsa ~ (1|subject) + high_confidence_accuracy, REML = FALSE, data = c) #Fitting a model using REML
anova(std)
LRT
LRT$full_model
std$
s
summary(std)
pred = predict(std, c, type = "response")
pred
require(ggplot2)
ggplot(dat, aes(x=x1, y=preds)) +
geom_point(shape=16, cex=1) +
geom_smooth(method=lm) +
xlab("x1") + ylab("predicted y") +
theme(axis.title=element_text(size=26), axis.text=element_text(size=16))
ggplot(c, aes(x=x1, y=preds)) +
geom_point(shape=16, cex=1) +
geom_smooth(method=lm) +
xlab("x1") + ylab("predicted y") +
theme(axis.title=element_text(size=26), axis.text=element_text(size=16))
ggplot(c, aes(x=high_confidence_accuracy, y=rsa)) +
geom_point(shape=16, cex=1) +
geom_smooth(method=lm) +
xlab("x1") + ylab("predicted y") +
theme(axis.title=element_text(size=26), axis.text=element_text(size=16))
c$preds = predict(std, c, type = "response")
require(ggplot2)
ggplot(c, aes(x=high_confidence_accuracy, y=preds)) +
geom_point(shape=16, cex=1) +
geom_smooth(method=lm) +
xlab("x1") + ylab("predicted y") +
theme(axis.title=element_text(size=26), axis.text=element_text(size=16))
c$preds = predict(LTR, c, type = "response")
c$preds = predict(LRT, c, type = "response")
ggplot(c, aes(x=high_confidence_accuracy, y=preds)) +
geom_point(shape=16, cex=1) +
geom_line(method=lm) +
xlab("x1") + ylab("predicted y") +
theme(axis.title=element_text(size=26), axis.text=element_text(size=16))
ggplot(c, aes(x=high_confidence_accuracy, y=preds)) +
geom_point(shape=16, cex=1) +
geom_line() +
xlab("x1") + ylab("predicted y") +
theme(axis.title=element_text(size=26), axis.text=element_text(size=16))
#c <- df[with(df,group==GROUP & roi == ROI & encode_phase == PHASE & trial_type == 'CS+'),]
c <- df[with(df,group==GROUP & roi == ROI & encode_phase == PHASE),]
std <- lmer(rsa ~ (1|subject) + high_confidence_accuracy*trial_type, REML = FALSE, data = c) #Fitting a model using REML
anova(std)
library(emmeans)
install.packages("emmeans")
require(emmeans)
emmip(std,  high_confidence_accuracy ~ trial_type)
source('~/.active-rstudio-document', echo=TRUE)
emmeans(std, pairwise ~ high_confidence_accuracy : trial_type)
c <- df[with(df,group==GROUP & roi == ROI & encode_phase == PHASE & trial_type == 'CS+'),]
std <- lmer(rsa ~ (1|subject) + high_confidence_accuracy*trial_type, REML = FALSE, data = c) #Fitting a model using REML
anova(std)
emmip(std,  high_confidence_accuracy ~ trial_type)
emmip(std,  high_confidence_accuracy)
std <- lmer(rsa ~ (1|subject) + high_confidence_accuracy, REML = FALSE, data = c) #Fitting a model using REML
anova(std)
emmip(std,  high_confidence_accuracy)
std
emmip(std,  high_confidence_accuracy1)
emmeans(std, pairwise ~ high_confidence_accuracy)
##################
#here down is actually correct
LRT <- mixed(rsa ~ (1|subject)  +  high_confidence_accuracy, data = c, REML = FALSE, method = 'LRT')
LRT
LRT$tests
LRT$full_model
View(std)
model <- ezMixed(c,dv=.(rsa),fixed=.(high_confidence_accuracy),random=.(subject),return_models = TRUE)
model
summary(model)
model$summary
model$models
df <- read.csv('full_ers.csv')
df$subject <- as.factor(df$subject)
ROI <- 'A14m'
GROUP <- 'ptsd'
PHASE <- 'extinction'
c <- df[with(df,group==GROUP & roi == ROI & encode_phase == PHASE & trial_type == 'CS+'),]
model <- ezMixed(c,dv=.(rsa),fixed=.(high_confidence_accuracy),random=.(subject),return_models = TRUE)
##################
#here down is actually correct
LRT <- mixed(rsa ~ (1|subject)  +  high_confidence_accuracy, data = c, REML = FALSE, method = 'LRT')
LRT
LRT$full_model
std <- lmer(rsa ~ (1|subject) + high_confidence_accuracy, REML = FALSE, data = c) #Fitting a model using REML
anova(std)
summary(std)
meanCenter
require(QuantPsyc)
meanCenter
meanCenter(c$high_confidence_accuracy)
#c <- df[with(df,group==GROUP & roi == ROI & encode_phase == PHASE),]
c$mem <- meanCenter(c$high_confidence_accuracy)
std <- lmer(rsa ~ (1|subject) + mem, REML = FALSE, data = c) #Fitting a model using REML
anova(std)
emmip(std,  high_confidence_accuracy)
emmeans(std, pairwise ~ high_confidence_accuracy)
c$preds = predict(LRT, c, type = "response")
c$preds = predict(std, c, type = "response")
ggplot(c, aes(x=high_confidence_accuracy, y=preds)) +
geom_point(shape=16, cex=1) +
geom_line() +
xlab("x1") + ylab("predicted y") +
theme(axis.title=element_text(size=26), axis.text=element_text(size=16))
df
df$resp_num
setwd("C:/Users/ACH/Documents/gPPI")
df <- read.csv('full_ers.csv')
df$subject <- as.factor(df$subject)
ROI <- 'A14m'
GROUP <- 'ptsd'
PHASE <- 'extinction'
c <- df[with(df,group==GROUP & roi == ROI & encode_phase == PHASE & trial_type == 'CS+'),]
#c <- df[with(df,group==GROUP & roi == ROI & encode_phase == PHASE),]
c$mem <- meanCenter(c$resp_num)
##################
#here down is actually correct
LRT <- mixed(rsa ~ (1|subject)  +  mem, data = c, REML = FALSE, method = 'LRT')
std <- lmer(rsa ~ (1|subject) + mem, REML = FALSE, data = c) #Fitting a model using REML
anova(std)
##################
#here down is actually correct
LRT <- mixed(rsa ~ (1|subject)  +  mem, data = c, REML = FALSE, method = 'LRT')
LRT
c$preds = predict(std, c, type = "response")
require(ggplot2)
ggplot(c, aes(x=high_confidence_accuracy, y=preds)) +
geom_point(shape=16, cex=1) +
geom_line() +
xlab("x1") + ylab("predicted y") +
theme(axis.title=element_text(size=26), axis.text=element_text(size=16))
ggplot(c, aes(x=mem, y=preds)) +
geom_point(shape=16, cex=1) +
geom_line() +
xlab("x1") + ylab("predicted y") +
theme(axis.title=element_text(size=26), axis.text=element_text(size=16))
df$high_confidence_accuracy <- as.factor(df$high_confidence_accuracy)
ROI <- 'A14m'
GROUP <- 'ptsd'
PHASE <- 'extinction'
c <- df[with(df,group==GROUP & roi == ROI & encode_phase == PHASE & trial_type == 'CS+'),]
Model.REML <- lmer(Response ~ Condition + (1 + Condition | Subject) + (1 + Condition | Item), REML = TRUE, data = MyData)
model <- ezMixed(c,dv=.(rsa),fixed=.(high_confidence_accuracy),random=.(subject),return_models = TRUE)
##################
#here down is actually correct
LRT <- mixed(rsa ~ (1|subject)  +  mem, data = c, REML = FALSE, method = 'LRT')
std <- lmer(rsa ~ (1|subject) + mem, REML = FALSE, data = c) #Fitting a model using REML
anova(std)
df <- read.csv('full_ers.csv')
df$subject <- as.factor(df$subject)
df$high_confidence_accuracy <- as.factor(df$high_confidence_accuracy)
ROI <- 'A14m'
GROUP <- 'ptsd'
PHASE <- 'extinction'
c <- df[with(df,group==GROUP & roi == ROI & encode_phase == PHASE & trial_type == 'CS+'),]
std <- lmer(rsa ~ (1|subject) + high_confidence_accuracy, REML = FALSE, data = c) #Fitting a model using REML
anova(std)
##################
#here down is actually correct
LRT <- mixed(rsa ~ (1|subject)  +  mem, data = c, REML = FALSE, method = 'LRT')
##################
#here down is actually correct
LRT <- mixed(rsa ~ (1|subject)  +  high_confidence_accuracy, data = c, REML = FALSE, method = 'LRT')
LRT
LRT$tests
LRT$full_model
LRT
std <- lmer(rsa ~ (1|subject) + high_confidence_accuracy, REML = FALSE, data = c) #Fitting a model using REML
anova(std)
summary(std)
std <- lmer(rsa ~ (1|subject) + high_confidence_accuracy, REML = FALSE, data = c)
summary(std)
emmip(std,  high_confidence_accuracy)
emmeans(std, pairwise ~ high_confidence_accuracy)
c$preds = predict(std, c, type = "response")
require(ggplot2)
ggplot(c, aes(x=mem, y=preds)) +
geom_point(shape=16, cex=1) +
geom_line() +
xlab("x1") + ylab("predicted y") +
theme(axis.title=element_text(size=26), axis.text=element_text(size=16))
ggplot(c, aes(x=high_confidence_accuracy, y=preds)) +
geom_point(shape=16, cex=1) +
geom_line() +
xlab("x1") + ylab("predicted y") +
theme(axis.title=element_text(size=26), axis.text=element_text(size=16))
ggplot(c, aes(x=high_confidence_accuracy, y=preds)) +
geom_point(shape=16, cex=1) +
xlab("x1") + ylab("predicted y") +
theme(axis.title=element_text(size=26), axis.text=element_text(size=16))
##################
#here down is actually correct
LRT <- mixed(rsa ~ (1|subject)  +  high_confidence_accuracy, data = c, REML = FALSE, method = 'LRT')
LRT$full_model
wo_mem <- lmer(rsa ~ (1|subject), REML = FALSE, data = c)
w_mem <- lmer(rsa ~ (1|subject) + high_confidence_accuracy, REML = FALSE, data = c)
anova(wo_mem,w_mem)
summary(w_mem)
ROI <- 'sgACC'
GROUP <- 'ptsd'
PHASE <- 'extinction'
c <- df[with(df,group==GROUP & roi == ROI & encode_phase == PHASE & trial_type == 'CS+'),]
CON <- 'CS+'
c <- df[with(df,group==GROUP & roi == ROI & encode_phase == PHASE & trial_type == CON),]
rm(list=ls())
std <- lmer(rsa ~ (1|subject) + high_confidence_accuracy, REML = FALSE, data = c)
anova(std)
require(lme4)
require(ez)
require(afex)
require(lmerTest) #Package must be installed first
require(emmeans)
setwd("C:/Users/ACH/Documents/gPPI")
df <- read.csv('full_ers.csv')
df$subject <- as.factor(df$subject)
df$high_confidence_accuracy <- as.factor(df$high_confidence_accuracy)
ROI <- 'sgACC'
GROUP <- 'ptsd'
PHASE <- 'extinction'
CON <- 'CS+'
c <- df[with(df,group==GROUP & roi == ROI & encode_phase == PHASE & trial_type == CON),]
##################
#here down is actually correct
std <- lmer(rsa ~ (1|subject) + high_confidence_accuracy, REML = FALSE, data = c)
summary(std)
anova(std)
source('~/gPPI/mem_rsa_lmm.r', echo=TRUE)
##################
#here down is actually correct
wo_mem <- lmer(rsa ~ (1|subject), REML = FALSE, data = c)
w_mem <- lmer(rsa ~ (1|subject) + high_confidence_accuracy, REML = FALSE, data = c)
anova(wo_mem,w_mem)
##################
#here down is actually correct
wo_mem <- lmer(rsa ~ (1|subject), REML = FALSE, data = c)
w_mem <- lmer(rsa ~ (1|subject) + high_confidence_accuracy, REML = FALSE, data = c)
anova(wo_mem,w_mem)
ROI <- 'A14m'
GROUP <- 'ptsd'
PHASE <- 'extinction'
CON <- 'CS+'
c <- df[with(df,group==GROUP & roi == ROI & encode_phase == PHASE & trial_type == CON),]
##################
#here down is actually correct
wo_mem <- lmer(rsa ~ (1|subject), REML = FALSE, data = c)
w_mem <- lmer(rsa ~ (1|subject) + high_confidence_accuracy, REML = FALSE, data = c)
anova(wo_mem,w_mem)
w_mem
w_mem['fixed']
w_mem$fixed
rois = c('A32sg','A32p','A24cd','A24rv','A14m','A11m','A13','A10m','A9m','A8m','A6m')
rois
rois[0]
rois(1)
rois <- list('A32sg','A32p','A24cd','A24rv','A14m','A11m','A13','A10m','A9m','A8m','A6m')
rois[0]
rois[1
rois[1]
rois[1]
rois[2]
lmm_res <- expand.grid(rois,phases,groups,conditions)
#set up output structure
rois <- list('A32sg','A32p','A24cd','A24rv','A14m','A11m','A13','A10m','A9m','A8m','A6m')
phases <- list('baseline','acquisition','early_extinction','extinction')
groups <- list('healthy','ptsd')
conditions <- list('CS+','CS-')
lmm_res <- expand.grid(rois,phases,groups,conditions)
View(groups)
View(lmm_res)
lmm_res <- expand.grid(roi=rois,phases,groups,conditions)
lmm_res <- expand.grid(roi=rois,phase=phases,group=groups,condition=conditions)
lmm_res$chisq <- 0
rm(list=ls())
require(ez)
require(afex)
require(lmerTest) #Package must be installed first
require(emmeans)
setwd("C:/Users/ACH/Documents/gPPI")
require(lme4)
require(ez)
require(afex)
require(lmerTest) #Package must be installed first
require(emmeans)
setwd("C:/Users/ACH/Documents/gPPI")
#set up output structure
rois <- list('A32sg','A32p','A24cd','A24rv','A14m','A11m','A13','A10m','A9m','A8m','A6m')
phases <- list('baseline','acquisition','early_extinction','extinction')
groups <- list('healthy','ptsd')
conditions <- list('CS+','CS-')
lmm_res <- expand.grid(roi=rois,phase=phases,group=groups,condition=conditions)
lmm_res$fixed <- 0
lmm_res$chisq <- 0
lss_res$pval <- 0
#load the full dataset
df <- read.csv('full_ers.csv')
df$subject <- as.factor(df$subject)
df$high_confidence_accuracy <- as.factor(df$high_confidence_accuracy)
for roi in rois{print(roi)}
for {roi in rois}(print(roi)
for (roi in rois){print(roi)}
GROUP = 'ptsd'
ROI = 'A32sg'
PHASE = 'extinction'
CON = 'CS+'
dat <- df[with(df, group == GROUP & roi == ROI, encode_phase == PHASE & trial_type == CON),]
dat
dat <- df[with(df, group == GROUP & roi == ROI & encode_phase == PHASE & trial_type == CON),]
dat
wo_mem <- lmer(rsa ~ (1|subject), REML = FALSE, data = dat)
w_mem <- lmer(rsa ~ (1|subject) + high_confidence_accuracy, REML = FALSE, data = dat)
lrt_res <- anova(wo_mem,w_mem)
lrt_res
lrt_res$Chisq
lrt_res$Chisq[0]
lrt_res$Chisq[1
]
lrt_res$Chisq[2]
lrt_res$`Pr(>Chisq)`
lrt_res$`Pr(>Chisq)`[2]
lmm_res$pval <- 0
lmm_res[group]
lmm_res[with(df, group == GROUP & roi == ROI & encode_phase == PHASE & trial_type == CON),]
lmm_res[with(lmm_res, group == GROUP & roi == ROI & encode_phase == PHASE & trial_type == CON),]
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & trial_type == CON),]
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),]
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),chisq]
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),'chisq']
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),'chisq'] <- lrt_res$Chisq[2]
lrt_res$`Pr(>Chisq)`[2]
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),'chisq'] <- lrt_res$`Pr(>Chisq)`[2]
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),'chisq'] <- lrt_res$Chisq[2]
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),'pval'] <- lrt_res$`Pr(>Chisq)`[2]
w_mem
w_mem['Fixed Effects']
summary(w_mem)
q <- summary(w_mem)
q$coefficients
q$coefficients[1]
q$coefficients[2]
rm(list=ls())
#set up output structure
rois <- list('A32sg','A32p','A24cd','A24rv','A14m','A11m','A13','A10m','A9m','A8m','A6m')
phases <- list('baseline','acquisition','early_extinction','extinction')
groups <- list('healthy','ptsd')
conditions <- list('CS+','CS-')
lmm_res <- expand.grid(roi=rois,phase=phases,group=groups,condition=conditions)
lmm_res$beta <- 0
lmm_res$chisq <- 0
lmm_res$pval <- 0
#load the full dataset
df <- read.csv('full_ers.csv')
df$subject <- as.factor(df$subject)
df$high_confidence_accuracy <- as.factor(df$high_confidence_accuracy)
for (GROUP in groups){
for (PHASE in phases){
for (ROI in rois){
for (CON in condition){
dat <- df[with(df, group == GROUP & roi == ROI & encode_phase == PHASE & trial_type == CON),]
wo_mem <- lmer(rsa ~ (1|subject), REML = FALSE, data = dat)
w_mem <- lmer(rsa ~ (1|subject) + high_confidence_accuracy, REML = FALSE, data = dat)
lrt_res <- anova(wo_mem,w_mem)
lmm_summary <- summary(w_mem)
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),'beta'] <- lmm_summary$coefficients[2]
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),'chisq'] <- lrt_res$Chisq[2]
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),'pval'] <- lrt_res$`Pr(>Chisq)`[2]
}
}
}
}
for (GROUP in groups){
for (PHASE in phases){
for (ROI in rois){
for (CON in conditions){
dat <- df[with(df, group == GROUP & roi == ROI & encode_phase == PHASE & trial_type == CON),]
wo_mem <- lmer(rsa ~ (1|subject), REML = FALSE, data = dat)
w_mem <- lmer(rsa ~ (1|subject) + high_confidence_accuracy, REML = FALSE, data = dat)
lrt_res <- anova(wo_mem,w_mem)
lmm_summary <- summary(w_mem)
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),'beta'] <- lmm_summary$coefficients[2]
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),'chisq'] <- lrt_res$Chisq[2]
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),'pval'] <- lrt_res$`Pr(>Chisq)`[2]
}
}
}
}
dat <- df[with(df,subject %notin% c(18,20,120) group == GROUP & roi == ROI & encode_phase == PHASE & trial_type == CON),]
`%notin%` <- Negate(`%in%`)
dat <- df[with(df,subject %notin% c(18,20,120) & group == GROUP & roi == ROI & encode_phase == PHASE & trial_type == CON),]
dat
rm(list=ls())
require(lme4)
require(ez)
require(afex)
require(lmerTest) #Package must be installed first
require(emmeans)
`%notin%` <- Negate(`%in%`)
setwd("C:/Users/ACH/Documents/gPPI")
#set up output structure
rois <- list('A32sg','A32p','A24cd','A24rv','A14m','A11m','A13','A10m','A9m','A8m','A6m')
phases <- list('baseline','acquisition','early_extinction','extinction')
groups <- list('healthy','ptsd')
conditions <- list('CS+','CS-')
lmm_res <- expand.grid(roi=rois,phase=phases,group=groups,condition=conditions)
lmm_res$beta <- 0
lmm_res$chisq <- 0
lmm_res$pval <- 0
#load the full dataset
df <- read.csv('full_ers.csv')
df$subject <- as.factor(df$subject)
df$high_confidence_accuracy <- as.factor(df$high_confidence_accuracy)
for (GROUP in groups){
for (PHASE in phases){
for (ROI in rois){
for (CON in conditions){
dat <- df[with(df,subject %notin% c(18,20,120) & group == GROUP & roi == ROI & encode_phase == PHASE & trial_type == CON),]
wo_mem <- lmer(rsa ~ (1|subject), REML = FALSE, data = dat)
w_mem <- lmer(rsa ~ (1|subject) + high_confidence_accuracy, REML = FALSE, data = dat)
lrt_res <- anova(wo_mem,w_mem)
lmm_summary <- summary(w_mem)
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),'beta'] <- lmm_summary$coefficients[2]
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),'chisq'] <- lrt_res$Chisq[2]
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),'pval'] <- lrt_res$`Pr(>Chisq)`[2]
}
}
}
}
176*1.05
176*.05
write.csv(lmm_res,'rsa_lmm_results.csv')
lmm_res <- as.data.frame(lmm_res)
write.csv(lmm_res,'rsa_lmm_results.csv')
rm(list=ls())
require(lme4)
require(ez)
require(afex)
require(lmerTest) #Package must be installed first
require(emmeans)
`%notin%` <- Negate(`%in%`)
setwd("C:/Users/ACH/Documents/gPPI")
#set up output structure
rois <- list('A32sg','A32p','A24cd','A24rv','A14m','A11m','A13','A10m','A9m','A8m','A6m')
phases <- list('baseline','acquisition','early_extinction','extinction')
groups <- list('healthy','ptsd')
conditions <- list('CS+','CS-')
lmm_res <- expand.grid(roi=rois,phase=phases,group=groups,condition=conditions)
lmm_res$beta <- 0
lmm_res$chisq <- 0
lmm_res$pval <- 0
#load the full dataset
df <- read.csv('full_ers.csv')
df$subject <- as.factor(df$subject)
df$high_confidence_accuracy <- as.factor(df$high_confidence_accuracy)
for (GROUP in groups){
for (PHASE in phases){
for (ROI in rois){
for (CON in conditions){
dat <- df[with(df,subject %notin% c(18,20,120) & group == GROUP & roi == ROI & encode_phase == PHASE & trial_type == CON),]
wo_mem <- lmer(rsa ~ (1|subject), REML = FALSE, data = dat)
w_mem <- lmer(rsa ~ (1|subject) + high_confidence_accuracy, REML = FALSE, data = dat)
lrt_res <- anova(wo_mem,w_mem)
lmm_summary <- summary(w_mem)
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),'beta'] <- lmm_summary$coefficients[2]
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),'chisq'] <- lrt_res$Chisq[2]
lmm_res[with(lmm_res, group == GROUP & roi == ROI & phase == PHASE & condition == CON),'pval'] <- lrt_res$`Pr(>Chisq)`[2]
}
}
}
}
lmm_res <- as.data.frame(lmm_res)
write.csv(lmm_res,'rsa_lmm_results.csv')
lmm_res <- apply(lmm_res,2,as.character)
View(lmm_res)
write.csv(lmm_res,'rsa_lmm_results.csv')
