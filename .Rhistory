writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which("make")
data <- c(-473.5699768066406,-83.557861328125,138.0847930908203)
x <- c(1,1,1)
fixed.dum <-lm(data ~ x )
View(h)
View(fixed.dum)
summary(fixed.dum)
mean(data)
data <- c(-18.966285705566406,46.228389739990234,87.1185531616211)
mean(data)
fixed.dum <-lm(data ~ x )
summary(fixed.dum)
43.09965133666992 - 38.13
data <- c(-78.41908264160156,-5.62774658203125,-11.942834854125977)
mean(data)
fixed.dum <-lm(data ~ x )
summary(fixed.dum)
-23.54083824157715 - 38.13
-23.54083824157715 - -38.13
data - mean(data)
q <- data - mean(data)
q
fixed.dum <-lm(q ~ x )
summary(f)
summary(fixed.dum)
q = c(-46.42253,26.36881,20.05372)
fixed.dum <-lm(q ~ x )
summary(fixed.dum)
fixed.dum <-lm(data ~ x )
summary(fixed.dum)
var
err
err <- c(7640.6611328125,1453.7471923828125,3965.20703125)
fixed.dum <-lm(data ~ x + err)
summary(fixed)
summary(fixed.dum)
summary(fixed.dum)
fixed.dum <-lm(data ~ x * err)
summary(fixed.dum)
fixed.dum <-lm(data ~ x)
summary(fixed.dum)
mean(data)
dataPanel101 <- read_csv("https://github.com/ds777/sample-datasets/blob/master/dataPanel101.csv?raw=true")
library(tidyverse) # Modern data science library
library(plm)       # Panel data analysis library
library(car)       # Companion to applied regression
library(gplots)    # Various programing tools for plotting data
library(tseries)   # For timeseries analysis
library(lmtest)
dataPanel101 <- read_csv("https://github.com/ds777/sample-datasets/blob/master/dataPanel101.csv?raw=true")
dataPanel101 <- read.csv("https://github.com/ds777/sample-datasets/blob/master/dataPanel101.csv?raw=true")
dataPanel101
dataPanel101 <- plm.data(dataPanel101, index=c("country","year"))
require(tidy_verse)
require(tidyverse)
install.packages(tidyverse)
"tidyverse"
install.packages("tidyverse")
install.packages("plm")
dataPanel101 <- plm.data(dataPanel101, index=c("country","year"))
require(plm)
dataPanel101 <- plm.data(dataPanel101, index=c("country","year"))
dataPanel101
factor(dataPanel101$country)
factor(dataPanel101$country) - 1
fixed.dum <-lm(y ~ x1 + factor(country) - 1, data = dataPanel101)
\
fixed.dum <-lm(y ~ x1 + factor(country) - 1, data = dataPanel101)
)
summary(fixed.dum)
data
data.frame((data,y))
data.frame((data,x))
data.frame(c(data,x))
data.frame(c(data))
q<-data.frame(c(data))
q
q<-data.frame(data)
q
q$X <- x
x
q
fixed.dum <-lm(data ~ X + factor(X) - 1, data=q)
fixed.dum <-lm(data ~ X + X - 1, data=q)
summary(fixed.dum)
q$Sess <- c(1,2,3)
q
q$Subj <- c(1,1,1)
fixed <- lm(data ~ Subj + factor(Sess) - 1, data =q)
fixed
summary(fixed)
mean(data)
fixed <- lm(data ~ Subj + Sess, data =q)
summary(fixed)
rm(list = ls())
require(lme4)
require(lmerTest)
require(emmeans)
require(magrittr)
require(ggplot2)
require(effects)
require(interactions)
require(jtools)
require(dplyr)
require(installr)
install.packages("installr")
updateR()
require(installr)
updateR()
updateR()
View(dataPanel101)
View(SvmPFC)
rm(list =ls())
require(lme4)
require(lmerTest)
require(emmeans)
require(magrittr)
require(ggplot2)
require(effects)
require(interactions)
require(jtools)
require(dplyr)
require(reghelper)
require(RColorBrewer)
require(dotwhisker)
require(afex)
afex::set_sum_contrasts()
phases <- c('baseline','acquisition','extinction')
emo_phases <- c('acquisition','extinction')
cons <- c('CS+','CS-')
groups <- c('healthy','ptsd')
group_pal <- colors()[c(565,555)]
phase_pal <- colors()[c(454,614)]
con_pal <- colors()[c(17,92)]
emm_options(lmer.df="asymptotic")
#setwd('/Users/ach3377/Documents/gPPI')
setwd('C:\\Users\\ACH\\Documents\\gPPI')
pfc <- read.csv('pfc_ers_cleaned_lmm.csv')
subcort <- read.csv('subcort_ers_cleaned_lmm.csv')
#i do this so the phases are in order alphabetically (baseline, conditioning, extinction)
pfc <- pfc %>% mutate(phase = recode(phase, "acquisition" = "conditioning"))
subcort <- subcort %>% mutate(phase = recode(phase, "acquisition" = "conditioning"))
#hippocampus------------------------------------------------------------------------------------
hpc <- subcort[which(subcort$roi %in% c('hc_head','hc_body','hc_tail')),]
hpc.mod <- mixed(ers ~ condition*phase*roi*group + (1|subject), data=hpc, REML=FALSE, method="LRT")#, test_intercept=TRUE))
summary(hpc.mod)
anova(hpc.mod)
hpc.mod.int <- emmeans(hpc.mod, ~1)
emmeans(hpc.mod, revpairwise ~ condition|phase*roi*group, adjust="None")
#just showing that the condition comp is null in the hippocampus
hpc.cond <- emmeans(hpc.mod, revpairwise ~ condition|phase*roi*group, adjust="None")
summary(hpc.cond)
p.adjust(summary(hpc.cond)$p.value, method="fdr")
emmeans(hpc.mod, revpairwise ~ condition|phase*roi*group, adjust="None")
summary(hpc.cond)
p.adjust(summary(hpc.cond)$p.value, method="fdr")
p.adjust(summary(hpc.cond$contrasts)$p.value, method="fdr")
require(lme4)
require(lmerTest)
require(emmeans)
require(magrittr)
require(ggplot2)
require(effects)
require(interactions)
require(jtools)
require(dplyr)
require(reghelper)
require(RColorBrewer)
require(dotwhisker)
require(afex)
afex::set_sum_contrasts()
phases <- c('baseline','acquisition','extinction')
emo_phases <- c('acquisition','extinction')
cons <- c('CS+','CS-')
groups <- c('healthy','ptsd')
group_pal <- colors()[c(565,555)]
phase_pal <- colors()[c(454,614)]
con_pal <- colors()[c(17,92)]
emm_options(lmer.df="asymptotic")
pfc <- read.csv('pfc_ers_cleaned_lmm.csv')
subcort <- read.csv('subcort_ers_cleaned_lmm.csv')
#i do this so the phases are in order alphabetically (baseline, conditioning, extinction)
pfc <- pfc %>% mutate(phase = recode(phase, "acquisition" = "conditioning"))
subcort <- subcort %>% mutate(phase = recode(phase, "acquisition" = "conditioning"))
#amygdala------------------------------------------------------------------------------------
amyg <- subcort[which(subcort$roi %in% c('amyg_cem','amyg_bla')),]
amyg.mod <- mixed(ers ~ condition*phase*roi*group + (1|subject), data=amyg, REML=FALSE, method="LRT")
anova(amyg.mod)
amyg.mod.int <- emmeans(amyg.mod, ~1)
test(amyg.mod.int)
summary(amyg.mod.int)
#doing the cs comps for continuity
amyg.cond <- emmeans(amyg.mod, revpairwise ~ condition|phase*roi*group, adjust="None")
summary(amyg.cond)
p.adjust(summary(amyg.cond$contrasts)$p.value, method="fdr")
amyg.p <- p.adjust(summary(amyg.cond$contrasts)$p.value, method="fdr")
min(amyg.p)
max(amyg.p)
tail.ers.phasedif <- emtrends(tail.ers.mod, revpairwise~phase|group, var="hc_tail_ers")
#subcortical ERS predictions------------------------------------------------------------------
df <- read.csv('all_data_lmm.csv')
emo <- df[which(df$phase %in% c('acquisition','extinction')),] #emo = emotional contexts
tail.ers.mod <- mixed(pfc_diff_ers ~ hc_tail_ers*condition*phase*group + (1|subject), data=emo, REML=FALSE, method="LRT")
tail.ers.phasedif <- emtrends(tail.ers.mod, revpairwise~phase|group, var="hc_tail_ers")
summary(tail.ers.phasedif)
tail.ers.phasedif <- emtrends(tail.ers.mod, revpairwise~phase|condition*group, var="hc_tail_ers")
tail.ers.phasedif <- emtrends(tail.ers.mod, revpairwise~phase|condition*group, var="hc_tail_ers")
summary(tail.ers.phasedif)
tail.ers.dif <- emtrends(tail.ers.mod, pairwise~group|phase, var="hc_tail_ers")
tail.ers.dif <- emtrends(tail.ers.mod, pairwise~group|phase, var="hc_tail_ers", adjust="None")
p.adjust(test(tail.ers.dif)$p.value)
tail.ers.dif <- emtrends(tail.ers.mod, pairwise~group|phase, var="hc_tail_ers", adjust="None")
p.adjust(test(tail.ers.dif)$p.value)
tail.ers.dif
tail.ers.dif
tail.ers.dif <- emtrends(tail.ers.mod, ~group|phase, var="hc_tail_ers", adjust="None")
tail.ers.dif
test(tail.ers.dif)
and you stand on the arms of the williamsburg bridge crying "hey man well this is babylon"
you can take her with youi
head.ers.mod <- mixed(pfc_diff_ers ~ hc_head_ers*condition*phase*group + (1|subject), data=emo, REML=FALSE, method="LRT")
anova(head.ers.mod)[pred.rows,]
pred.rows <- c(1,5,6,8,11,12,13,15) #we just care about main effect and interactions with the continuous predictor
anova(head.ers.mod)[pred.rows,]
head.ers.slope <- emtrends(head.ers.mod, ~1, var="hc_head_ers")
head.ers.dif <- emtrends(head.ers.mod, pairwise~phase|group, var="hc_head_ers")
summary(head.ers.dif)
tail.ers.dif <- emtrends(tail.ers.mod, pairwise~phase, var="hc_tail_ers", adjust="None")
summary(tail.ers.dif)
head.ers.dif
head.ers.dif$contrasts
anova(cem.ers.mod)[pred.rows,]
cem.ers.mod <- mixed(pfc_diff_ers ~ amyg_cem_ers*condition*phase*group + (1|subject), data=emo, REML=FALSE, method="LRT")
require(lme4)
require(lmerTest)
require(emmeans)
require(magrittr)
require(ggplot2)
require(effects)
require(interactions)
require(jtools)
require(dplyr)
require(reghelper)
require(RColorBrewer)
require(dotwhisker)
require(afex)
afex::set_sum_contrasts()
phases <- c('baseline','acquisition','extinction')
emo_phases <- c('acquisition','extinction')
cons <- c('CS+','CS-')
groups <- c('healthy','ptsd')
group_pal <- colors()[c(565,555)]
phase_pal <- colors()[c(454,614)]
con_pal <- colors()[c(17,92)]
emm_options(lmer.df="asymptotic")
#analysis of recognition memory------------------------------------------------------------------
pfc <- read.csv('pfc_ers_cleaned_lmm.csv')
#i do this so the phases are in order alphabetically (baseline, conditioning, extinction)
pfc <- pfc %>% mutate(phase = recode(phase, "acquisition" = "conditioning"))
pfc.mod <- mixed(ers ~ mem_acc*condition*phase*roi*group + (1|subject), data=pfc, REML=FALSE, method="LRT")#, test_intercept=TRUE)
pfc.mod.int <- emmeans(pfc.mod, ~1)
summary(pfc.mod.int)
test(pfc.mod.int)$p.value
anova(pfc.mod)
beh.mod <- mixed(mem_acc ~ condition*phase*group + (1|subject), data = pfc, REML=FALSE, method="LRT")
pfc.mem_acc
pfc$mem_acc
beh <- pfc %>% mutate(mem_acc = recode(mem_acc, "H" = 1, "M" = 0))
beh$mem_acc
beh.mod <- mixed(mem_acc ~ condition*phase*group + (1|subject), data = beh, REML=FALSE, method="LRT")
anova(pfc.mod)
anova(beh.mod)
high <- glmer(mem_acc ~ condition*phase*group + (1|subject), family="binomial", data=beh)
summary(high)
anova(high)
test(high)
mixed?
?mixed
beh.mod <- mixed(mem_acc ~ condition*phase*group + (1|subject), data = beh, REML=FALSE, method="LRT", family="binomial")
beh.mod <- mixed(mem_acc ~ condition*phase*group + (1|subject), data = beh, method="LRT", family="binomial")
anova(beh.mod)
beh.mod <- mixed(mem_acc ~ condition*phase*group + (1|subject), data = beh, method="LRT", family="logit")
beh.mod <- mixed(mem_acc ~ condition*phase*group + (1|subject), data = beh, method="LRT", family="binomial")
water from the rock
wisconsin pines collect the air
definitely need the arm rest with this thing
d
d
d
asd asd asd
asd w e
w e
w e r
w e
pwd
pwd()
getcwd()
getwd()
source('~/gPPI/fg_lmm_stats.r', echo=TRUE)
# memory behavioral data --------------------------------------------------
df <- read.csv('mem_hit_rate_sub_means.csv')
df
require(ez)
mem.res <- ezANOVA(df,dv=.(mem_acc),within=.(phase,condition),between=.(group),wid=.(subject))
mem.res
mem.res$ANOVA
?ezANOVA
mem.res <- ezANOVA(df,dv=.(mem_acc),within=.(phase,condition),between=.(group),wid=.(subject),type=3)
mem.res$ANOVA
rm(list = ls())
require(lme4)
require(lmerTest)
require(emmeans)
require(magrittr)
require(ggplot2)
require(effects)
require(interactions)
require(jtools)
require(dplyr)
require(reghelper)
require(RColorBrewer)
require(dotwhisker)
require(afex)
require(ez)
afex::set_sum_contrasts()
phases <- c('baseline','acquisition','extinction')
emo_phases <- c('acquisition','extinction')
cons <- c('CS+','CS-')
groups <- c('healthy','ptsd')
group_pal <- colors()[c(565,555)]
phase_pal <- colors()[c(454,614)]
con_pal <- colors()[c(17,92)]
emm_options(lmer.df="asymptotic")
pfc <- read.csv('pfc_ers_cleaned_lmm.csv')
subcort <- read.csv('subcort_ers_cleaned_lmm.csv')
#i do this so the phases are in order alphabetically (baseline, conditioning, extinction)
pfc <- pfc %>% mutate(phase = recode(phase, "acquisition" = "conditioning"))
subcort <- subcort %>% mutate(phase = recode(phase, "acquisition" = "conditioning"))
#subcortical univariate predictions------------------------------------------------------------------
df <- read.csv('all_data_lmm.csv')
emo <- df[which(df$phase %in% c('acquisition','extinction')),] #emo = emotional contexts
tail.uni.mod <- mixed(pfc_diff_ers ~ hc_tail_ret_uni*condition*phase*group + (1|subject), data=emo, REML=FALSE, method="LRT")
q <- mixed(pfc_diff_ers ~ hc_tail_ret_uni*condition*phase*group + (1|subject), data=emo, REML=FALSE, method="LRT")
w <- mixed(pfc_diff_ers ~ test*condition*phase*group + (1|subject), data=emo, REML=FALSE, method="LRT")
e <- effectsize::standardize(q,select="hc_tail_ret_uni",include_response=T)
tail.uni.mod <- mixed(pfc_diff_ers ~ hc_tail_ret_uni*condition*phase*group + (1|subject), data=emo, REML=FALSE, method="LRT")
body.uni.mod <- mixed(pfc_diff_ers ~ hc_body_ret_uni*condition*phase*group + (1|subject), data=emo, REML=FALSE, method="LRT")
head.uni.mod <- mixed(pfc_diff_ers ~ hc_head_ret_uni*condition*phase*group + (1|subject), data=emo, REML=FALSE, method="LRT")
bla.uni.mod <- mixed(pfc_diff_ers ~ amyg_bla_ret_uni*condition*phase*group + (1|subject), data=emo, REML=FALSE, method="LRT")
cem.uni.mod <- mixed(pfc_diff_ers ~ amyg_cem_ret_uni*condition*phase*group + (1|subject), data=emo, REML=FALSE, method="LRT")
pred.rows <- c(1,5,6,8,11,12,13,15) #we just care about main effect and interactions with the continuous predictor
anova(tail.uni.mod)[pred.rows,]
tail.uni.slope <- emtrends(tail.uni.mod, ~1, var="hc_tail_ret_uni")
tail.uni.csdif <- emtrends(tail.uni.mod, revpairwise~condition, var="hc_tail_ret_uni")
summary(tail.uni.csdif$contrasts)$p.value
confint(tail.uni.csdif)
anova(body.uni.mod)[pred.rows,]
body.uni.slope <- emtrends(body.uni.mod, ~1, var="hc_body_ret_uni")
body.uni.dif <- emtrends(body.uni.mod, revpairwise ~ condition|phase, var="hc_body_ret_uni")
p.adjust(summary(body.uni.dif$contrasts)$p.value, method="fdr")
confint(body.uni.dif$contrasts)
tail.uni.out <- emtrends(tail.uni.mod, ~condition|phase, var="hc_tail_ret_uni")
tail.uni.out
data.frame(tail.uni.out)
write.csv(data.frame(tail.uni.out),'hc_tail_slopes_con_phase.csv')
write.csv(data.frame(body.uni.out),'hc_body_slopes_con_phase.csv')
body.uni.out <- emtrends(body.uni.mod, ~condition|phase, var="hc_body_ret_uni")
write.csv(data.frame(body.uni.out),'hc_body_slopes_con_phase.csv')
#analysis of recognition memory------------------------------------------------------------------
pfc <- read.csv('pfc_ers_cleaned_lmm.csv')
#i do this so the phases are in order alphabetically (baseline, conditioning, extinction)
pfc <- pfc %>% mutate(phase = recode(phase, "acquisition" = "conditioning"))
require(lme4)
require(lmerTest)
require(emmeans)
require(magrittr)
require(ggplot2)
require(effects)
require(interactions)
require(jtools)
require(dplyr)
require(reghelper)
require(RColorBrewer)
require(dotwhisker)
require(afex)
require(ez)
afex::set_sum_contrasts()
phases <- c('baseline','acquisition','extinction')
emo_phases <- c('acquisition','extinction')
cons <- c('CS+','CS-')
groups <- c('healthy','ptsd')
group_pal <- colors()[c(565,555)]
phase_pal <- colors()[c(454,614)]
con_pal <- colors()[c(17,92)]
emm_options(lmer.df="asymptotic")
#analysis of recognition memory------------------------------------------------------------------
pfc <- read.csv('pfc_ers_cleaned_lmm.csv')
#i do this so the phases are in order alphabetically (baseline, conditioning, extinction)
pfc <- pfc %>% mutate(phase = recode(phase, "acquisition" = "conditioning"))
pfc.mod <- mixed(ers ~ mem_acc*condition*phase*roi*group + (1|subject), data=pfc, REML=FALSE, method="LRT")#, test_intercept=TRUE)
anova(pfc.mod)
# hippocampus memory ------------------------------------------------------
hpc <- subcort[which(subcort$roi %in% c('hc_head','hc_body','hc_tail')),]
#i do this so the phases are in order alphabetically (baseline, conditioning, extinction)
hpc <- hpc %>% mutate(phase = recode(phase, "acquisition" = "conditioning"))
hpc.mod <- mixed(ers ~ mem_acc*condition*phase*roi*group + (1|subject), data=hpc, REML=FALSE, method="LRT")#, test_intercept=TRUE))
anova(hpc.mod)
dif <- emmeans(hpc.mod, revpairwise ~ mem_acc|phase*group)
summary(dif$contrasts)
dif <- emmeans(hpc.mod, revpairwise ~ mem_acc|phase*group*condition)
summary(dif$contrasts)
#amygdala memory------------------------------------------------------------------------------------
amyg <- subcort[which(subcort$roi %in% c('amyg_cem','amyg_bla')),]
amyg.mod <- mixed(ers ~ mem_acc*condition*phase*roi*group + (1|subject), data=amyg, REML=FALSE, method="LRT")
anova(amyg.mod)
dif <- emmeans(amyg.mod, pairwise ~ mem_acc|condition*phase*roi)
dif.ci <- confint(dif$contrasts)
summary(dif$contrasts)
anova(amyg.mod)
anova(hpc.mod)
hdf <- pfc[which(pfc$group == 'healthy' & pfc$phase %in% c('conditioning','extinction')),]
24*2*2*2
View(hdf)
24*2*2*2*24
hdf.mod <- mixed(ers ~ condition*phase*roi + (1|subject), data=hdf, REML=FALSE, method="LRT")
require(lme4)
require(lmerTest)
require(emmeans)
require(magrittr)
require(ggplot2)
require(effects)
require(interactions)
require(jtools)
require(dplyr)
require(reghelper)
require(RColorBrewer)
require(dotwhisker)
require(afex)
require(ez)
afex::set_sum_contrasts()
phases <- c('baseline','acquisition','extinction')
emo_phases <- c('acquisition','extinction')
cons <- c('CS+','CS-')
groups <- c('healthy','ptsd')
group_pal <- colors()[c(565,555)]
phase_pal <- colors()[c(454,614)]
con_pal <- colors()[c(17,92)]
emm_options(lmer.df="asymptotic")
#just really focused interaction
hdf <- pfc[which(pfc$group == 'healthy' & pfc$phase %in% c('conditioning','extinction')),]
hdf.mod <- mixed(ers ~ condition*phase*roi + (1|subject), data=hdf, REML=FALSE, method="LRT")
anova(hdf.mod)
pdf <- pfc[which(pfc$group == 'healthy' & pfc$phase %in% c('conditioning','extinction')),]
pdf.mod <- mixed(ers ~ condition*phase*roi + (1|subject), data=pdf, REML=FALSE, method="LRT")
anova(pdf.mod)
pdf <- pfc[which(pfc$group == 'ptsd' & pfc$phase %in% c('conditioning','extinction')),]
pdf.mod <- mixed(ers ~ condition*phase*roi + (1|subject), data=pdf, REML=FALSE, method="LRT")
anova(pdf.mod)
#just the interaction I care about for realz
hdf <- hpc[which(hpc$group == 'healthy' & hpc$phase %in% c('conditioning','extinction') & hpc$roi %in% c('hc_tail','hc_head')),]
hdf.mod <- mixed(ers ~ condition*phase*roi + (1|subject), data=hdf, REML=FALSE, method="LRT")
require(lme4)
require(lmerTest)
require(emmeans)
require(magrittr)
require(ggplot2)
require(effects)
require(interactions)
require(jtools)
require(dplyr)
require(reghelper)
require(RColorBrewer)
require(dotwhisker)
require(afex)
require(ez)
afex::set_sum_contrasts()
phases <- c('baseline','acquisition','extinction')
emo_phases <- c('acquisition','extinction')
cons <- c('CS+','CS-')
groups <- c('healthy','ptsd')
group_pal <- colors()[c(565,555)]
phase_pal <- colors()[c(454,614)]
con_pal <- colors()[c(17,92)]
emm_options(lmer.df="asymptotic")
pfc <- read.csv('pfc_ers_cleaned_lmm.csv')
subcort <- read.csv('subcort_ers_cleaned_lmm.csv')
#i do this so the phases are in order alphabetically (baseline, conditioning, extinction)
pfc <- pfc %>% mutate(phase = recode(phase, "acquisition" = "conditioning"))
subcort <- subcort %>% mutate(phase = recode(phase, "acquisition" = "conditioning"))
#hippocampus------------------------------------------------------------------------------------
hpc <- subcort[which(subcort$roi %in% c('hc_head','hc_body','hc_tail')),]
#just the interaction I care about for realz
hdf <- hpc[which(hpc$group == 'healthy' & hpc$phase %in% c('conditioning','extinction') & hpc$roi %in% c('hc_tail','hc_head')),]
hdf.mod <- mixed(ers ~ condition*phase*roi + (1|subject), data=hdf, REML=FALSE, method="LRT")
anova(hdf.mod)
pdf <- hpc[which(hpc$group == 'ptsd' & hpc$phase %in% c('conditioning','extinction') & hpc$roi %in% c('hc_tail','hc_head')),]
pdf.mod <- mixed(ers ~ condition*phase*roi + (1|subject), data=pdf, REML=FALSE, method="LRT")
anova(pdf.mod)
ls()
#just the interaction I care about for realz
hdf <- hpc[which(hpc$group == 'healthy' & hpc$phase %in% c('conditioning','extinction') & hpc$roi %in% c('hc_tail','hc_head')),]
hdf.mod <- mixed(ers ~ condition*phase*roi + (1|subject), data=hdf, REML=FALSE, method="LRT")
pwr
require(pwr)
install.packages(pwr)
install.packages('pwr')
require(pwr)
pwr.t.test(n=NULL,d=.867383,alpha=.05,power=.8)
pwr.t.test(n=NULL,d=.867383,sig.level = .05,power=.8)
pwr.t.test(n=NULL,d=.867383,sig.level = .05,power=.8, type=paired-samples)
pwr.t.test(n=NULL,d=.867383,sig.level = .05,power=.8, type='paired')
