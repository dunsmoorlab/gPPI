summary(pfc.mod.int)
#PFC encoding-retrieval similarity----------------------------------------------------------------------
pfc.mod <- mixed(ers ~ condition*phase*roi*group + (1|subject), data=pfc, REML=FALSE, method="LRT")#, test_intercept=TRUE)
pfc.mod.int <- emmeans(pfc.mod, ~1)
require(lme4)
require(lmerTest)
require(emmeans)
require(magrittr)
require(ggplot2)
require(effects)
require(interactions)
require(jtools)
require(dplyr)
require(reghelper)
require(RColorBrewer)
require(dotwhisker)
require(afex)
require(ez)
afex::set_sum_contrasts()
phases <- c('baseline','acquisition','extinction')
emo_phases <- c('acquisition','extinction')
cons <- c('CS+','CS-')
groups <- c('healthy','ptsd')
group_pal <- colors()[c(565,555)]
phase_pal <- colors()[c(454,614)]
con_pal <- colors()[c(17,92)]
emm_options(lmer.df="asymptotic")
#setwd('/Users/ach3377/Documents/gPPI')
setwd('C:\\Users\\ACH\\Documents\\gPPI')
pfc <- read.csv('pfc_ers_cleaned_lmm.csv')
subcort <- read.csv('subcort_ers_cleaned_lmm.csv')
#i do this so the phases are in order alphabetically (baseline, conditioning, extinction)
pfc <- pfc %>% mutate(phase = recode(phase, "acquisition" = "conditioning"))
subcort <- subcort %>% mutate(phase = recode(phase, "acquisition" = "conditioning"))
#PFC encoding-retrieval similarity------------------
require(lme4)
require(lmerTest)
require(emmeans)
require(magrittr)
require(ggplot2)
require(effects)
require(interactions)
require(jtools)
require(dplyr)
require(reghelper)
require(RColorBrewer)
require(dotwhisker)
require(afex)
require(ez)
afex::set_sum_contrasts()
phases <- c('baseline','acquisition','extinction')
emo_phases <- c('acquisition','extinction')
cons <- c('CS+','CS-')
groups <- c('healthy','ptsd')
group_pal <- colors()[c(565,555)]
phase_pal <- colors()[c(454,614)]
con_pal <- colors()[c(17,92)]
emm_options(lmer.df="asymptotic")
#setwd('/Users/ach3377/Documents/gPPI')
setwd('C:\\Users\\ACH\\Documents\\gPPI')
pfc <- read.csv('pfc_ers_cleaned_lmm.csv')
subcort <- read.csv('subcort_ers_cleaned_lmm.csv')
#i do this so the phases are in order alphabetically (baseline, conditioning, extinction)
pfc <- pfc %>% mutate(phase = recode(phase, "acquisition" = "conditioning"))
subcort <- subcort %>% mutate(phase = recode(phase, "acquisition" = "conditioning"))
#PFC encoding-retrieval similarity------------------
#subcortical ERS predictions------------------------------------------------------------------
df <- read.csv('all_data_lmm.csv')
emo <- df[which(df$phase %in% c('acquisition','extinction')),] #emo = emotional contexts
tail.ers.mod <- mixed(pfc_diff_ers ~ hc_tail_ers*condition*phase*group + (1|subject), data=emo, REML=FALSE, method="LRT")
body.ers.mod <- mixed(pfc_diff_ers ~ hc_body_ers*condition*phase*group + (1|subject), data=emo, REML=FALSE, method="LRT")
head.ers.mod <- mixed(pfc_diff_ers ~ hc_head_ers*condition*phase*group + (1|subject), data=emo, REML=FALSE, method="LRT")
bla.ers.mod <- mixed(pfc_diff_ers ~ amyg_bla_ers*condition*phase*group + (1|subject), data=emo, REML=FALSE, method="LRT")
cem.ers.mod <- mixed(pfc_diff_ers ~ amyg_cem_ers*condition*phase*group + (1|subject), data=emo, REML=FALSE, method="LRT")
pred.rows <- c(1,5,6,8,11,12,13,15) #we just care about main effect and interactions with the continuous predictor
tail.ers.slope <- emtrends(tail.ers.mod, ~1, var="hc_tail_ers")
anova(tail.ers.mod)[pred.rows,]
anova(body.ers.mod)[pred.rows,]
anova(head.ers.mod)[pred.rows,]
anova(bla.ers.mod)[pred.rows,]
anova(cem.ers.mod)[pred.rows,]
#hello.mod <- mixed(pfc_diff_ers ~ hc_head_ret_uni*hc_head_ers*condition*phase*group + (1|subject), data=emo, REML=FALSE, method="LRT")
ers.slopes.out <- list(
as.numeric(as.data.frame(tail.ers.slope)[1,c(2,5,6)]),
as.numeric(as.data.frame(body.ers.slope)[1,c(2,5,6)]),
as.numeric(as.data.frame(head.ers.slope)[1,c(2,5,6)]),
as.numeric(as.data.frame(bla.ers.slope)[1,c(2,5,6)]),
as.numeric(as.data.frame(cem.ers.slope)[1,c(2,5,6)]))
body.ers.slope <- emtrends(body.ers.mod, ~1, var="hc_body_ers")
anova(head.ers.mod)[pred.rows,]
head.ers.slope <- emtrends(head.ers.mod, ~1, var="hc_head_ers")
head.ers.dif <- emtrends(head.ers.mod, pairwise~phase|group, var="hc_head_ers")
confint(head.ers.dif)
test(head.ers.dif)
p.adjust(test(head.ers.dif)$p.value)
head.ers.vis <- emmip(head.ers.mod, phase|group~hc_head_ers, at=list(hc_head_ers=seq(-.3,.5,by=0.01)), CIs=TRUE, plotit=F)
head.vis.out <- ggplot(data=head.ers.vis, aes(x=hc_head_ers,y=yvar, color=phase, linetype=group)) + geom_line() + geom_ribbon(aes(ymax=UCL, ymin=LCL, fill=phase), alpha=0.4)
write.csv(head.vis.out$data,'hc_head_pfc_diff_lines.csv')
anova(bla.ers.mod)[pred.rows,]
bla.ers.slope <- emtrends(bla.ers.mod, ~1, var="amyg_bla_ers")
bla.ers.dif <- emtrends(bla.ers.mod, pairwise~condition|group, var="amyg_bla_ers")
test(bla.ers.dif)
anova(cem.ers.mod)[pred.rows,]
cem.ers.slope <- emtrends(cem.ers.mod, ~1, var="amyg_cem_ers")
cem.ers.dif <- emtrends(cem.ers.mod, ~condition|phase*group, var="amyg_cem_ers")
test(cem.ers.dif)
#hello.mod <- mixed(pfc_diff_ers ~ hc_head_ret_uni*hc_head_ers*condition*phase*group + (1|subject), data=emo, REML=FALSE, method="LRT")
ers.slopes.out <- list(
as.numeric(as.data.frame(tail.ers.slope)[1,c(2,5,6)]),
as.numeric(as.data.frame(body.ers.slope)[1,c(2,5,6)]),
as.numeric(as.data.frame(head.ers.slope)[1,c(2,5,6)]),
as.numeric(as.data.frame(bla.ers.slope)[1,c(2,5,6)]),
as.numeric(as.data.frame(cem.ers.slope)[1,c(2,5,6)]))
names(ers.slopes.out) <- c("tail","body","head","bla","cem")
ers.slopes.out
write.csv(as.data.frame(ers.slopes.out),"ers_slopes_pfc_pred.csv")
as.data.frame(ers.slopes.out)
